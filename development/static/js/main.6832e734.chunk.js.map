{"version":3,"sources":["Utils/VisibilityListener.js","Components/ActionButton.js","Components/CommandDisplay.js","Components/CommandGroup.js","Components/EditableSetting.js","Components/SettingsGroup.js","DeviceTypes/TasmotaDevice.js","Utils/CopyToClipboard.js","Components/DeviceList.js","Components/DisplayModeButtons.js","Screens/Devices.js","DeviceTypes/TasmotaDeviceConnector.js","Configuration/TasmotaConfig-6.7.0.0.js","Configuration/TasmotaConfig-7.1.2.0.js","Configuration/TasmotaVersionedConfig.js","DeviceManagement/DeviceManager.js","Screens/DeviceDetails.js","Screens/DeviceSettings.js","Screens/FindDevices.js","Screens/Console.js","Configuration/AppConfig.js","App.js","index.js"],"names":["hidden","visibilityChange","ActionButton","display","this","props","icon","selected","selectedIcon","Tooltip","title","toolTip","style","visibility","IconButton","aria-label","label","onClick","event","onButtonClick","React","Component","CommandDisplay","commandSent","commandOptions","command","options","concat","unshift","description","type","defaultInputSelection","defaultOption","commandName","endsWith","indexed","inputRange","range","indexRange","split","i","push","state","commandIndex","selectedOption","valueToSend","commandToSend","generateCommand","logsOutput","currentSelectedInputRangeValue","currentSelectedCommand","generateCurrentCommand","deviceConnector","connect","disconnect","cmnd","success","response","log","JSON","stringify","addLog","stopPropagation","setState","newLog","Date","toLocaleTimeString","trim","performCommandOnDevice","sendCommandInternal","target","value","option","rangeValue","replace","arg","slashIndex","indexOf","substring","Box","flexDirection","flexGrow","paddingTop","width","height","px","List","dense","map","ListItem","key","role","undefined","button","onInputRangeItemSelected","ListItemIcon","Radio","checked","name","inputProps","ListItemText","id","primary","onOptionItemSelected","isCurrentSelectedOption","secondary","shouldShowValueInput","noValidate","autoComplete","TextField","rows","multiline","required","onChange","onValueInputChanged","margin","variant","onCommandInputChanged","Typography","TextareaAutosize","rowsMax","disabled","onClearLog","window","open","toLowerCase","ExpansionPanel","TransitionProps","unmountOnExit","mountOnEnter","ExpansionPanelSummary","expandIcon","aria-controls","alignItems","flexBasis","openHelp","alignSelf","color","ExpansionPanelDetails","flexWrap","whiteSpace","renderCommandDetails","Divider","ExpansionPanelActions","Button","size","sendCommand","CommandGroup","commandGroupName","groupType","Object","entries","commandGroup","sort","EditableSetting","enableEdit","currentValue","settingUpdatedCallback","classes","flexShrink","justifyContent","InputProps","disabledInput","Fragment","save","withStyles","theme","palette","text","SettingsGroup","pros","getCurrentSettings","isExpanded","settingsGroup","settings","forEach","setting","index","performCommandOnDeviceDirect","defaultStates","settingsStates","commandResponses","console","newState","assign","keys","toUpperCase","handleSettingsChanged","slice","groupName","renderSettingInputs","saveSettings","document","msHidden","webkitHidden","onWindowVisibilityChangedCallbacks","addEventListener","callback","addVisibilityChangeCallback","onWindowVisibilityChanged","removeVisibilityChangeCallback","splice","onButtonTheme","createMuiTheme","blue","powerRegex","RegExp","dimmerRegex","DimmerSlider","root","paddingBottom","paddingLeft","paddingRight","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","templateGPIOIndex","templateFlagOptions","TasmotaDevice","deviceConfig","visibilityListener","bind","getPanelCommandData","macAddress","deviceInfo","dimmerAnchors","online","currentTemplate","currentModuleConfig","currentModuleType","pendingCommand","visible","resume","pause","nextProps","deviceManager","getDeviceConnector","getDevice","status0Response","StatusNET","IPAddress","getTasmotaConfig","templateResponse","VisibilityListener","updatedInfo","updateDevice","currentState","updateDeviceInfoState","startsWith","gpioResponse","gpioResponseFormatter","gpio255Response","gpiosResponse","modulesResponse","Module","status0Clone","status","param","StatusSNS","moduleResponse","wifiPowerResponse","dimmer","newValue","moduleParsed","moduleResponseParser","moduleNum","TableRow","TableCell","component","scope","fontSize","Status","FriendlyName","actionButtons","renderConnectivityStatus","getModuleDisplayText","flex","renderDetailsControlsButtons","renderDetailsControlsDimmers","StatusSTS","Wifi","RSSI","Uptime","MqttCount","LinkCount","Downtime","StatusFWR","Version","Core","StatusPRM","BootCount","RestartReason","LoadAvg","Sleep","WifiPower","BSSId","Hostname","Mac","Gateway","SSId","Channel","Topic","GroupTopic","StatusMQT","MqttHost","MqttPort","MqttClient","SDK","StatusMEM","ProgramSize","Free","OtaUrl","src","padding","buttons","filter","test","ThemeProvider","powerToggle","newAnchors","dimmers","openDimmerPopover","Popover","Boolean","anchorEl","onClose","dimmerPopoverClosed","anchorOrigin","vertical","horizontal","transformOrigin","defaultValue","aria-labelledby","valueLabelDisplay","step","min","max","onChangeCommitted","dimmerUpdate","cmndData","Table","TableHead","TableBody","align","bytesString","bitArray","digitValue","char","n","reverse","renderDetailsSetOptionsListItems","setOption","StatusLOG","SetOption","setOptionStr","valueArray","convertHexStringToBitArray","setOptionsStatusMaps","items","item","itemIndex","soValue","setOptionStart","ListItemSecondaryAction","Checkbox","edge","changeSetOption","availableGPIOs","gpioNum","gpioName","gpio","length","Array","isArray","toString","gpioindex","newTemplate","GPIO","parseInt","oldName","newName","NAME","FLAG","BASE","availableModules","moduleName","onTemplateNameUpdated","FormControl","Select","labelId","onTemplateGPIOChanged","getAvailableGPIOS","availableGPIO","MenuItem","onTemplateFlagChanged","templateFlag","onTemplateBaseChanged","getAvailableModules","mod","setTimeout","isTemplateRenderable","renderTemplateResponse","CircularProgress","resetTemplate","saveTemplate","gpioObj","gpioDeviceType","gpioDeviceName","newConfig","request","performRequestOnDevice","moduleType","moduleConfig","onModuleTypeChanged","isModuleConfigurationRenderable","renderGPIOConfiguration","resetModuleConfiguration","saveModuleConfiguration","renderGPIOResponse","settingsGroups","colSpan","renderDetailsSetOptions","renderModuleConfiguration","renderDetailsTemplate","configuration","commands","renderDetailsConnectivity","renderDetailsGPIO","el","createElement","setAttribute","position","body","appendChild","select","execCommand","removeChild","copyToClipboard","renderDetailsStatuses","renderType","justifyItems","Paper","renderDetailsImage","onFriendlyNameUpdatedCallback","renderTypeDetails","renderTypeSettings","renderTypeList","renderTypeSettingsAndDetails","renderTypeTableStatusRow","renderTypeTableHealthRow","renderTypeTableWifiRow","renderTypeTableMqttRow","renderTypeTableFirmwareRow","imageContainer","spacing","detailsContainer","DeviceList","displayMode","renderTypeTable","renderTypeCard","devices","mac","renderButton","openDeviceDetails","deleteDevice","renderTableHeaderStatus","renderTableHeaderHealth","renderTableHeaderWifi","renderTableHeaderMqtt","renderTableHeaderFirmware","stickyHeader","deviceSections","section","renderTableHeader","itemButtons","renderItems","DisplayModeButtons","Devices","openDeviceSettings","openDeviceConsole","openWebUI","history","ip","removeDevice","newDevices","getDevices","appConfig","getAppConfig","prevProps","prevState","snapshot","putAppConfig","gtag","overflow","TasmotaDeviceConnector","ipAddress","authInfo","deviceIPAddress","deviceListeners","timer","requestDeviceStatus","listener","clearInterval","setInterval","getStatus0","getState","args","url","deviceListener","onDeviceRequestResponse","onCommandResponse","getStatus8","getModule","getWifiPower","performRequestOnDeviceDirect","encodeURIComponent","username","password","runtimeConfig","proxyMode","superagent","get","timeout","deadline","end","err","error","TasmotaConfig_06070000","structName","bitSize","moduleParts","parsed","gpioInfo","Commands","ButtonDebounce","Control","ButtonRetain","MQTT","SetOption11","SetOptions","SetOption13","SetOption32","SetOption40","SetOption61","Switch","SwitchDebounce","SwitchRetain","Relay","BlinkCount","BlinkTime","PowerOnState","PowerRetain","Interlock","SetOption0","SetOption26","SetOption63","TasmotaConfig_07010200","commandType","SetOption77","WiFi","CORS","updatedConfig","TasmotaVersionedConfig","getConfigurationForVersion","version","versions","closestVersion","maximumVersion","availableVersion","substr","DeviceManager","deviceConnectors","localStorage","parse","getItem","discoveredDevices","oldInfo","saveDevices","versionStr","versionNumbers","setItem","updateDeviceConnector","deviceMac","updateIpAddress","disconnectAll","DeviceDetails","match","params","FindDevices","ipsToScan","ipsRequested","handleIPFromChange","ipFrom","nets","to","ipTo","calculateTotalIPs","handleIPToChange","addDevice","getDiscoveredDevices","commonButtons","knownDeviceButtons","newDeviceButtons","totalAddresses","numIpsRequested","numIpsCompleted","searching","enableAuth","enableCorsAutomatically","from","Address4","bigInteger","addDiscoveredDevice","WARNING","enqueueSnackbar","scanIps","shift","enableCorsAndSendRequest","sendRequest","location","protocol","hostname","port","res","obj","ipNum","fromBigInteger","correctForm","discoveredDevicesMacs","isDeviceKnown","reduce","knownDevices","placeholder","handleStopClicked","handleFindClicked","FormControlLabel","control","onEnableCorsAutomaticallyChanged","labelPlacement","onAuthEnableChanged","LinearProgress","valueBuffer","withSnackbar","Console","deviceName","webLogEnabled","weblogLevel","terminal","createRef","commandFired","WebLog","current","terminalInput","processCommand","line","rootNode","terminalRoot","scrolledUp","scrollTop","scrollHeight","clientHeight","pushToStdout","scrollToBottom","fireCommand","startWebLog","stopWebLog","nextCommanNumber","encodeURI","data","lines","lastIndexOf","usage","fn","generateCommands","requestLog","string","p1","p2","offset","weblogEnabled","onWegLogEnableChanged","clearStdout","sendConsoleCommand","InputLabel","onWebLogLevelChanged","className","ref","welcomeMessage","promptLabel","toCamelCase","AppConfig","appSessionConfig","sessionStorage","saveSessionConfig","saveAppConfig","mainMenuItems","link","App","children","child","nested","listItems","renderChildItems","CssBaseline","AppBar","appBar","Toolbar","noWrap","Drawer","drawer","paper","drawerPaper","anchor","toolbar","process","versionNumber","versionName","content","exact","path","render","DeviceSettings","marginBottom","main","mixins","background","default","ReactDOM","maxSnack","getElementById"],"mappings":"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AM,cACNrE,YAAa,qDACd,CACCqE,KAAM,oBACNrE,YAAa,4DACd,CACCqE,KAAM,gBACNrE,YAAa,kEACd,CACCqE,KAAM,YACNrE,YAAa,IACd,CACCqE,KAAM,cACNrE,YAAa,0DACd,CACCqE,KAAM,mBACNrE,YAAa,8CACd,CACCqE,KAAM,eACNrE,YAAa,gDACd,CACCqE,KAAM,eACNrE,YAAa,qCACd,CACCqE,KAAM,iBACNrE,YAAa,8CACd,CACCqE,KAAM,mBACNrE,YAAa,wDACd,CACCqE,KAAM,oBACNrE,YAAa,oCACd,CACCqE,KAAM,cACNrE,YAAa,IACd,CACCqE,KAAM,kBACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,4CACd,CACCqE,KAAM,cACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,kCACd,CACCqE,KAAM,yBACNrE,YAAa,IACd,CACCqE,KAAM,qBACNrE,YAAa,0BACd,CACCqE,KAAM,qBACNrE,YAAa,0BACd,CACCqE,KAAM,aACNrE,YAAa,uCACd,CACCqE,KAAM,eACNrE,YAAa,+BAGtB,CACC6f,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,IACR,CACC0K,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,CACH,CACI9Q,KAAM,gBACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,6BACd,CACCqE,KAAM,uBACNrE,YAAa,gCACd,CACCqE,KAAM,kBACNrE,YAAa,iDACd,CACCqE,KAAM,iBACNrE,YAAa,6CACd,CACCqE,KAAM,eACNrE,YAAa,wBACd,CACCqE,KAAM,gBACNrE,YAAa,mDACd,CACCqE,KAAM,kBACNrE,YAAa,yDACd,CACCqE,KAAM,cACNrE,YAAa,mCACd,CACCqE,KAAM,qBACNrE,YAAa,8DACd,CACCqE,KAAM,eACNrE,YAAa,gDACd,CACCqE,KAAM,4BACNrE,YAAa,yDACd,CACCqE,KAAM,iBACNrE,YAAa,0CACd,CACCqE,KAAM,oBACNrE,YAAa,2CACd,CACCqE,KAAM,iBACNrE,YAAa,uDACd,CACCqE,KAAM,2BACNrE,YAAa,uDACd,CACCqE,KAAM,2BACNrE,YAAa,0CACd,CACCqE,KAAM,gBACNrE,YAAa,gCACd,CACCqE,KAAM,qBACNrE,YAAa,kDACd,CACCqE,KAAM,2BACNrE,YAAa,IACd,CACCqE,KAAM,iBACNrE,YAAa,IACd,CACCqE,KAAM,gBACNrE,YAAa,uDACd,CACCqE,KAAM,wBACNrE,YAAa,+DACd,CACCqE,KAAM,eACNrE,YAAa,oBACd,CACCqE,KAAM,0BACNrE,YAAa,oDACd,CACCqE,KAAM,kBACNrE,YAAa,qEACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,eACNrE,YAAa,0BACd,CACCqE,KAAM,yBACNrE,YAAa,yCAGtB,CACC6f,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,CACH,CACI9Q,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,OAIzBgZ,eAAgB,CAAC,CACbhP,UAAW,gBACXf,SAAU,CAAC,CACP5E,KAAM,YACNzE,QAAS,YACV,CACCyE,KAAM,YACNzE,QAAS,YACV,CACCyE,KAAM,gBACNzE,QAAS,kBAEd,CACCoK,UAAW,gBACXf,SAAU,CAAC,CACP5E,KAAM,SACNzE,QAAS,SACV,CACCyE,KAAM,aACNzE,QAAS,aACV,CACCyE,KAAM,SACNzE,QAAS,SACV,CACCyE,KAAM,aACNzE,QAAS,aACV,CACCyE,KAAM,WACNzE,QAAS,eAejByP,qBAAsB,SAAUL,GAC5B,GAAqC,kBAA1BA,EAAeL,OACtB,OAAOK,EAEP,IAAI+Q,EAAc/Q,EAAeL,OAAOjO,MAAM,KAC1Csf,EAAS,CAAErR,OAAQ,IAEvB,OADAqR,EAAOrR,OAAOoR,EAAY,IAAMA,EAAY,GAAGld,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IACtEmd,GAGfzR,sBAAuB,SAAUD,GAC7B,OAAO7G,OAAOmC,KAAK0E,GAAc3K,KAAI,SAACoS,EAAM3M,GACxC,GAAkC,kBAAvBkF,EAAayH,GAAoB,CACxC,IAAIlS,EAAM4D,OAAOmC,KAAK0E,EAAayH,IAAO,GAC1C,MAAO,CAAEA,KAAMA,EAAMoC,eAAgBtU,EAAKuU,eAAgB9J,EAAayH,GAAMlS,IAE7E,MAAO,CAAEkS,KAAMA,EAAMkK,SAAU3R,EAAayH,QAIxDuD,SAAU4G,GACV7G,cAAe,CACXlS,OAAQ,CACJgZ,eAAgBD,GAASE,QAAQD,eACjCE,aAAcH,GAASI,KAAKD,aAC5BE,YAAaL,GAASM,WAAWD,YACjCE,YAAaP,GAASM,WAAWC,YACjCC,YAAaR,GAASM,WAAWE,YACjCC,YAAaT,GAASM,WAAWG,YACjCC,YAAaV,GAASM,WAAWI,aAErCC,OAAQ,CACJC,eAAgBZ,GAASE,QAAQD,eACjCY,aAAcb,GAASI,KAAKD,aAC5B,gBAAiBH,GAASE,QAAQ,iBAClCM,YAAaR,GAASM,WAAWE,aAErCM,MAAO,CACHC,WAAYf,GAASE,QAAQa,WAC7BC,UAAWhB,GAASE,QAAQc,UAC5BC,aAAcjB,GAASE,QAAQe,aAC/BC,YAAalB,GAASI,KAAKc,YAC3BC,UAAWnB,GAASE,QAAQiB,UAC5B,eAAgBnB,GAASE,QAAQ,gBACjCkB,WAAYpB,GAASM,WAAWc,WAChCC,YAAarB,GAASM,WAAWe,YACjCC,YAAatB,GAASM,WAAWgB,eCxCtC,IAAIC,GA9XX,WAEI,IAAIA,EAAyB,CACzBzI,eAAgB4G,GAAuB5G,eACvC3J,qBAAsBuQ,GAAuBvQ,qBAC7Cd,sBAAuBqR,GAAuBrR,sBAC9C+K,SAAU,GACVD,cAAeuG,GAAuBvG,cAG1CoI,qBACI,CAAC,CACG5B,WAAY,cACZtK,eAAgB,EAChBuK,QAAS,EACT3K,MAAO,CACH,CACI9Q,KAAM,aACNrE,YAAa,0CACd,CACCqE,KAAM,kBACNrE,YAAa,6BACd,CACCqE,KAAM,iBACNrE,YAAa,8BACd,CACCqE,KAAM,eACNrE,YAAa,gBACd,CACCqE,KAAM,gBACNrE,YAAa,yCACd,CACCqE,KAAM,oBACNrE,YAAa,IACd,CACCqE,KAAM,qBACNrE,YAAa,IACd,CACCqE,KAAM,qBACNrE,YAAa,IACd,CACCqE,KAAM,yBACNrE,YAAa,uCACd,CACCqE,KAAM,qBACNrE,YAAa,qBACd,CACCqE,KAAM,eACNrE,YAAa,mCACd,CACCqE,KAAM,cACNrE,YAAa,qDACd,CACCqE,KAAM,oBACNrE,YAAa,4DACd,CACCqE,KAAM,gBACNrE,YAAa,kEACd,CACCqE,KAAM,YACNrE,YAAa,IACd,CACCqE,KAAM,cACNrE,YAAa,0DACd,CACCqE,KAAM,mBACNrE,YAAa,8CACd,CACCqE,KAAM,eACNrE,YAAa,gDACd,CACCqE,KAAM,eACNrE,YAAa,qCACd,CACCqE,KAAM,iBACNrE,YAAa,8CACd,CACCqE,KAAM,mBACNrE,YAAa,wDACd,CACCqE,KAAM,oBACNrE,YAAa,oCACd,CACCqE,KAAM,cACNrE,YAAa,IACd,CACCqE,KAAM,kBACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,4CACd,CACCqE,KAAM,cACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,kCACd,CACCqE,KAAM,yBACNrE,YAAa,IACd,CACCqE,KAAM,qBACNrE,YAAa,0BACd,CACCqE,KAAM,qBACNrE,YAAa,0BACd,CACCqE,KAAM,aACNrE,YAAa,uCACd,CACCqE,KAAM,eACNrE,YAAa,+BAGtB,CACC6f,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,IACR,CACC0K,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,CACH,CACI9Q,KAAM,gBACNrE,YAAa,IACd,CACCqE,KAAM,sBACNrE,YAAa,6BACd,CACCqE,KAAM,uBACNrE,YAAa,gCACd,CACCqE,KAAM,kBACNrE,YAAa,iDACd,CACCqE,KAAM,iBACNrE,YAAa,6CACd,CACCqE,KAAM,eACNrE,YAAa,wBACd,CACCqE,KAAM,gBACNrE,YAAa,mDACd,CACCqE,KAAM,kBACNrE,YAAa,yDACd,CACCqE,KAAM,cACNrE,YAAa,mCACd,CACCqE,KAAM,qBACNrE,YAAa,8DACd,CACCqE,KAAM,eACNrE,YAAa,gDACd,CACCqE,KAAM,4BACNrE,YAAa,yDACd,CACCqE,KAAM,iBACNrE,YAAa,0CACd,CACCqE,KAAM,oBACNrE,YAAa,2CACd,CACCqE,KAAM,iBACNrE,YAAa,uDACd,CACCqE,KAAM,2BACNrE,YAAa,uDACd,CACCqE,KAAM,2BACNrE,YAAa,0CACd,CACCqE,KAAM,gBACNrE,YAAa,gCACd,CACCqE,KAAM,qBACNrE,YAAa,kDACd,CACCqE,KAAM,2BACNrE,YAAa,IACd,CACCqE,KAAM,iBACNrE,YAAa,IACd,CACCqE,KAAM,gBACNrE,YAAa,uDACd,CACCqE,KAAM,wBACNrE,YAAa,+DACd,CACCqE,KAAM,eACNrE,YAAa,oBACd,CACCqE,KAAM,0BACNrE,YAAa,oDACd,CACCqE,KAAM,kBACNrE,YAAa,qEACd,CACCqE,KAAM,mBACNrE,YAAa,2DACd,CACCqE,KAAM,wBACNrE,YAAa,gDACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,eACNrE,YAAa,0BACd,CACCqE,KAAM,yBACNrE,YAAa,yCAGtB,CACC6f,WAAY,eACZtK,eAAgB,GAChBuK,QAAS,EACT3K,MAAO,CACH,CACI9Q,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCqE,KAAM,UACNrE,YAAa,IACd,CACCq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","file":"static/js/main.6832e734.chunk.js","sourcesContent":["/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nvar hidden, visibilityChange;\nif (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support \n    hidden = \"hidden\";\n    visibilityChange = \"visibilitychange\";\n} else if (typeof document.msHidden !== \"undefined\") {\n    hidden = \"msHidden\";\n    visibilityChange = \"msvisibilitychange\";\n} else if (typeof document.webkitHidden !== \"undefined\") {\n    hidden = \"webkitHidden\";\n    visibilityChange = \"webkitvisibilitychange\";\n}\n\nvar onWindowVisibilityChangedCallbacks = [];\n\nfunction addVisibilityChangeCallback(onWindowVisibilityChanged) {\n    var index = onWindowVisibilityChangedCallbacks.indexOf(onWindowVisibilityChanged);\n    if (index === -1) {\n        onWindowVisibilityChangedCallbacks.push(onWindowVisibilityChanged);\n    }\n}\n\nfunction removeVisibilityChangeCallback(onWindowVisibilityChanged) {\n    var index = onWindowVisibilityChangedCallbacks.indexOf(onWindowVisibilityChanged);\n    if (index !== -1) {\n        onWindowVisibilityChangedCallbacks.splice(index, 1);\n    }\n}\n\nfunction handleVisibilityChange() {\n    for (let callback of onWindowVisibilityChangedCallbacks) {\n        callback(!document[hidden]);\n    }\n}\n\n// Warn if the browser doesn't support addEventListener or the Page Visibility API\nif (typeof document.addEventListener === \"undefined\" || hidden === undefined) {\n    console.log(\"This requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.\");\n} else {\n    // Handle page visibility change   \n    document.addEventListener(visibilityChange, handleVisibilityChange, false);\n}\n\nexport default { addVisibilityChangeCallback, removeVisibilityChangeCallback };","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nclass ActionButton extends React.Component {\n\n    render() {\n        let display = this.props.icon\n        if (this.props.selected) {\n            display = this.props.selectedIcon\n        }\n\n        return (\n            <Tooltip title={this.props.toolTip} style={{visibility: this.props.visibility ? this.props.visibility : \"visible\"}}>\n                <IconButton aria-label={this.props.label} onClick={(event) => this.props.onButtonClick(event)}>\n                    {display}\n                </IconButton>\n            </Tooltip>\n\n        )\n    }\n}\n\nexport default ActionButton","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport { Typography, Box, Radio, TextField, Button, Divider, TextareaAutosize } from '@material-ui/core';\nimport { Scrollbar } from 'react-scrollbars-custom';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport ActionButton from './ActionButton'\n\nclass CommandDisplay extends React.Component {\n\n    commandSent = null\n\n    constructor(props) {\n        super(props)\n\n        this.commandOptions = this.props.command.options.concat([])\n\n        this.commandOptions.unshift({\n            display: \"Read\",\n            description: \"Read current value from device\",\n            type: \"select\"\n        })\n\n        let defaultOption = this.commandOptions[0]\n\n        let defaultInputSelection\n        if (this.props.commandName.endsWith(\"<x>\") && this.props.command.indexed) {\n            this.inputRange = []\n            let range = this.props.command.indexRange.split('..');\n            for (var i = range[0]; i <= range[1]; i++) {\n                this.inputRange.push(i);\n            }\n            defaultInputSelection = this.inputRange[0]\n        } else {\n            this.inputRange = [\"\"]\n            defaultInputSelection = \"\"\n        }\n\n        this.state = {\n            commandIndex: 0,\n            selectedOption: defaultOption,\n            valueToSend: \"\",\n            commandToSend: this.generateCommand(defaultOption, \"\", 1),\n            logsOutput: \"\",\n            currentSelectedInputRangeValue: defaultInputSelection,\n            currentSelectedCommand: this.generateCurrentCommand(1),\n        }\n    }\n\n\n    componentWillMount() {\n        this.props.deviceConnector.connect(this)\n    }\n\n    componentWillUnmount() {\n        this.props.deviceConnector.disconnect(this)\n    }\n\n    onCommandResponse(cmnd, success, response) {\n\n        if (this.commandSent && cmnd === this.commandSent) {\n            let log = `Command ${cmnd} : ${success ? \"Success\" : \"Failed\"}`\n            if (success) {\n                log += `\\nResponse : ${JSON.stringify(response, null, 2)}`\n            }\n            this.addLog(log)\n        }\n    }\n\n    onClearLog(event) {\n        event.stopPropagation()\n        this.setState({ logsOutput: '' })\n    }\n\n    addLog(newLog) {\n        this.setState({ logsOutput: (this.state.logsOutput + `\\n${new Date().toLocaleTimeString()} : ${newLog}`).trim() })\n    }\n\n    sendCommandInternal(event, command) {\n        event.stopPropagation()\n        this.addLog('Sending command : ' + command)\n        this.commandSent = command\n        this.props.deviceConnector.performCommandOnDevice(command)\n\n    }\n\n    sendCommand(event) {\n        this.sendCommandInternal(event, this.state.commandToSend)\n    }\n\n    onCommandInputChanged(event) {\n        event.stopPropagation()\n        this.setState({ commandToSend: event.target.value })\n    }\n\n    onInputRangeItemSelected(event, value) {\n        event.stopPropagation()\n        this.setState({ currentSelectedInputRangeValue: value, currentSelectedCommand: this.generateCurrentCommand(value), commandToSend: this.generateCommand(this.state.selectedOption, this.state.valueToSend, value) })\n    }\n\n    onValueInputChanged(event) {\n        event.stopPropagation()\n        this.setState({ valueToSend: event.target.value, commandToSend: this.generateCommand(this.state.selectedOption, event.target.value, this.state.currentSelectedInputRangeValue) })\n    }\n\n    onOptionItemSelected(event, option) {\n        event.stopPropagation()\n        this.setState({ selectedOption: option, commandToSend: this.generateCommand(option, this.state.valueToSend, this.state.currentSelectedInputRangeValue) })\n    }\n\n    isCurrentSelectedOption(option) {\n        if (this.state.selectedOption) {\n            return this.state.selectedOption === option\n        } else {\n            return false\n        }\n    }\n\n    shouldShowValueInput() {\n        if (this.state.selectedOption) {\n            return this.state.selectedOption.type === \"input\" || this.state.selectedOption.type === \"range\"\n        } else {\n            return false\n        }\n    }\n\n    generateCurrentCommand(rangeValue) {\n        if (this.props.commandName.endsWith('<x>')) {\n            return this.props.commandName.replace(\"<x>\", rangeValue)\n        } else {\n            return this.props.commandName\n        }\n    }\n\n    generateCommand(option, valueToSend, rangeValue) {\n        let command = this.generateCurrentCommand(rangeValue)\n        if (option) {\n            switch (option.type) {\n                case \"select\":\n                    if (option.display !== \"Read\") {\n                        let arg = option.display\n                        let slashIndex = arg.indexOf(\"/\")\n                        if (slashIndex > 0) {\n                            arg = arg.substring(0, slashIndex)\n                        }\n                        command += ` ${arg}`\n                    }\n                    break\n\n                case \"input\":\n                case \"range\":\n                default:\n                    command += ` ${valueToSend}`\n                    break\n\n            }\n        }\n        return command\n    }\n\n    renderCommandDetails() {\n        return (\n            // <React.Fragment>\n            <Box display=\"flex\" flexDirection=\"column\" flexGrow={1} paddingTop={3}>\n                <Box display=\"flex\" flexDirection=\"row\" flexGrow={1}>\n                    <Scrollbar style={{ width: 300, height: 200 }} px={5} flexGrow={4}>\n                        <List dense>\n                            {this.inputRange.map(value => {\n                                let command = this.generateCurrentCommand(value)\n                                return (\n                                    <ListItem key={value} role={undefined} button onClick={(event) => this.onInputRangeItemSelected(event, value)}>\n                                        <ListItemIcon>\n                                            <Radio\n                                                checked={this.state.currentSelectedInputRangeValue === value}\n                                                value={value}\n                                                name={value}\n                                                inputProps={{ 'aria-label': 'A' }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={command} primary={command} />\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </Scrollbar>\n                    <Scrollbar style={{ width: 300, height: 200 }} px={5} flexGrow={4}>\n                        <List dense>\n                            {this.commandOptions.map(option => {\n                                return (\n                                    <ListItem key={option.display} role={undefined} button onClick={(event) => this.onOptionItemSelected(event, option)}>\n                                        <ListItemIcon>\n                                            <Radio\n                                                checked={this.isCurrentSelectedOption(option)}\n                                                // onChange={handleChange}\n                                                value={option.display}\n                                                name={option.display}\n                                                inputProps={{ 'aria-label': 'A' }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={option.display} primary={option.display} secondary={option.description} />\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </Scrollbar>\n                    {this.shouldShowValueInput() ?\n                        <form noValidate autoComplete=\"off\">\n                            <TextField\n                                px={5}\n                                style={{ width: 500, height: 150 }}\n                                flexGrow={4}\n                                rows=\"8\"\n                                multiline\n                                required\n                                id=\"value\"\n                                label=\"Value\"\n                                onChange={(event) => this.onValueInputChanged(event)}\n                                value={this.state.valueToSend}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                            />\n                        </form>\n                        : null}\n\n                </Box>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        style={{ width: 1000, height: 100 }}\n                        rows=\"1\"\n                        multiline\n                        id=\"commandToSend\"\n                        label=\"Command to Send\"\n                        value={this.state.commandToSend}\n                        onChange={(event) => this.onCommandInputChanged(event)}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                    />\n                </form>\n\n                <Typography px={5} flexGrow={1}>Logs</Typography>\n                <Box display=\"flex\" flexDirection=\"row\" flexGrow={0}>\n                    <TextareaAutosize\n                        aria-label=\"minimum height\"\n                        rows={6}\n                        rowsMax={8}\n                        value={this.state.logsOutput}\n                        disabled\n                        style={{ width: 1000, height: 100 }} />\n\n                    <ActionButton\n                        key={this.props.commandName + 'clearlog'}\n                        toolTip=\"Clear Log\"\n                        label=\"Clear Log\"\n                        icon={<HighlightOffIcon />}\n                        onButtonClick={(event) => this.onClearLog(event)}\n                    />\n                </Box>\n\n            </Box>\n        )\n    }\n\n    openHelp(event, command) {\n        event.stopPropagation()\n        window.open(`https://tasmota.github.io/docs/#/Commands?id=${this.props.commandName.toLowerCase().replace(\"<x>\", \"\")}`, \"tascommands\")\n    }\n\n    render() {\n\n        return (\n            <ExpansionPanel key={`CommandDisplay-${this.props.commandName}`} TransitionProps={{ unmountOnExit: true, mountOnEnter: true }}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" style={{ flexBasis: \"33%\" }}>\n                        <Typography>{this.props.commandName}</Typography>\n                        <IconButton onClick={(event) => this.openHelp(event,this.props.commandName)}>\n                            <HelpIcon />\n                        </IconButton>\n                    </Box>\n                    <Typography style={{ alignSelf: \"center\" }} color=\"textSecondary\" >{this.props.command.description.substring(0, 60)}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\">\n                        <Typography style={{ whiteSpace: 'pre-line' }}>{this.props.command.description}</Typography>\n                        {this.renderCommandDetails()}\n                    </Box>\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <Button size=\"small\" variant=\"contained\" onClick={(event) => this.sendCommand(event)}>Send Command</Button>\n                </ExpansionPanelActions>\n            </ExpansionPanel>\n        )\n    }\n}\n\nexport default CommandDisplay","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport CommandDisplay from './CommandDisplay'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography'\n\nclass CommandGroup extends React.Component {\n\n    render() {\n        return (\n\n            <ExpansionPanel key={`CommandGroup-`} TransitionProps={{ unmountOnExit: true, mountOnEnter: true }}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{`${this.props.commandGroupName} ${this.props.groupType}`}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n                        {Object.entries(this.props.commandGroup).sort().map(([commandName, command]) => {\n                            return (\n                                <CommandDisplay commandName={commandName} command={command} deviceConnector={this.props.deviceConnector} />\n                            )\n                        })}\n                    </Box>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    }\n\n}\n\n\nexport default CommandGroup","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport { Box, TextField } from '@material-ui/core'\nimport { withStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ActionButton from './ActionButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst styles = theme => ({\n    disabledInput: {\n        color: theme.palette.text.primary,\n    },\n})\n\nclass EditableSetting extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enableEdit: false,\n            currentValue: this.props.currentValue,\n        }\n    }\n\n    save(event) {\n        event.stopPropagation()\n        this.props.settingUpdatedCallback(this.props.currentValue, this.state.currentValue)\n        this.setState({ enableEdit: false })\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <Box display=\"flex\" flexDirection=\"row\" flexGrow={0} flexShrink={1} justifyContent=\"center\">\n                <TextField\n                    key={'editable-setting' + this.props.command}\n                    disabled={this.state.enableEdit ? 0 : 1}\n                    id={'id' + this.props.command}\n                    label={this.props.label}\n                    color=\"primary\"\n                    margin=\"normal\"\n                    value={this.state.currentValue}\n                    InputProps={{ classes: { disabled: classes.disabledInput } }}\n                    onChange={(event) => this.setState({ currentValue: event.target.value })}\n                />\n\n                {!this.state.enableEdit ?\n                    <React.Fragment>\n                        <ActionButton\n                            toolTip=\"Edit\"\n                            label=\"edit\"\n                            icon={<EditIcon />}\n                            onButtonClick={() => this.setState({ enableEdit: true })}\n                        />\n                    </React.Fragment>\n                    :\n                    (\n                        <React.Fragment>\n                            <ActionButton\n                                toolTip=\"Save\"\n                                label=\"save\"\n                                icon={<DoneIcon />}\n                                onButtonClick={(event) => this.save(event)}\n\n                            />\n                        </React.Fragment>\n                    )\n                }\n\n                <ActionButton\n                    visibility={this.state.enableEdit ? \"visible\" : \"hidden\"}\n                    toolTip=\"Cancel\"\n                    label=\"cancel\"\n                    icon={<CancelIcon />}\n                    onButtonClick={(event) => this.setState({ enableEdit: false, currentValue: this.props.currentValue })}\n                />\n\n            </Box>\n\n        )\n    }\n}\n\nexport default withStyles(styles)(EditableSetting)","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Typography, Box, Button } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\n\nclass SettingsGroup extends React.Component {\n\n    constructor(pros) {\n        super(pros)\n        let defaultStates = {}\n        this.props.settingsGroup.settings.forEach((setting) => {\n            defaultStates[setting.command] = \"\"\n        })\n        this.state = {\n            settingsStates: defaultStates,\n        }\n        this.commandResponses = {}\n    }\n\n    onCommandResponse(cmnd, success, response) {\n        console.log('Settings cmnd %s success %s response : %O ', cmnd, success, response)\n        if (success) {\n            let newState = Object.assign({}, this.state.settingsStates)\n            Object.keys(response).forEach((key) => {\n                if (key.toUpperCase() === cmnd.toUpperCase()) {\n                    newState[cmnd] = response[key];\n                    this.commandResponses[cmnd] = response[key]\n                }\n            })\n            // newState[cmnd] = String(response[cmnd])\n            this.setState({\n                settingsStates: newState,\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.props.deviceConnector.connect(this);\n        this.props.settingsGroup.settings.forEach((setting, index) => {\n            this.props.deviceConnector.performCommandOnDeviceDirect(setting.command);\n        })\n    }\n\n    componentWillUnmount() {\n        this.props.deviceConnector.disconnect(this);\n    }\n\n    getCurrentSettings = command => (event, isExpanded) => {\n        event.stopPropagation()\n        if (isExpanded) {\n            this.props.settingsGroup.settings.forEach((setting, index) => {\n                this.props.deviceConnector.performCommandOnDeviceDirect(setting.command);\n            })\n        }\n    }\n\n    handleSettingsChanged(event, command) {\n        event.stopPropagation()\n        let newState = Object.assign({}, this.state.settingsStates)\n        newState[command] = event.target.value\n        this.setState({\n            settingsStates: newState,\n        })\n    }\n\n    renderSettingInputs() {\n        return this.props.settingsGroup.settings.map((setting, index) => {\n            return <TextField\n                key={'settings' + setting.command}\n                id={'id' + setting.name}\n                label={setting.name}\n                // placeholder={setting.name}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.settingsStates[setting.command]}\n                onChange={(event) => this.handleSettingsChanged(event, setting.command)}\n            />\n        })\n    }\n\n    saveSettings(event) {\n        event.stopPropagation()\n        let command = 'backlog'\n        this.props.settingsGroup.settings.forEach((setting, index) => {\n            if (this.state.settingsStates[setting.command] !== this.commandResponses[setting.command]) {\n                command += ' ' + setting.command + ' ' + this.state.settingsStates[setting.command] + ';'\n            }\n        })\n\n        if (command !== 'backlog') {\n            command = command.slice(0, -1);\n            console.log('Performing command %s', command)\n            this.props.deviceConnector.performCommandOnDeviceDirect(command);\n        }\n    }\n\n    render() {\n        return (\n\n            <ExpansionPanel key={`SettingsExpansionPanel-${this.props.settingsGroup.groupName}`} onChange={this.getCurrentSettings()}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>{this.props.settingsGroup.groupName}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\n                        {this.renderSettingInputs()}\n                    </Box>\n                </ExpansionPanelDetails>\n                <Divider />\n                <ExpansionPanelActions>\n                    <Button size=\"small\" variant=\"contained\" onClick={(event) => this.saveSettings(event)}>Save {this.props.settingsGroup.groupName}</Button>\n                </ExpansionPanelActions>\n            </ExpansionPanel>\n\n        )\n    }\n\n}\n\nexport default SettingsGroup","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport { Box, Button, Divider, Paper, Slider, Tooltip, FormControl, InputLabel, Select, MenuItem, ExpansionPanelActions } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { blue } from '@material-ui/core/colors';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport ContactlessIcon from '@material-ui/icons/Contactless';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React, { Component } from 'react';\nimport Svg from 'react-inlinesvg';\nimport CommandGroup from '../Components/CommandGroup';\nimport EditableSetting from '../Components/EditableSetting';\nimport SettingsGroup from '../Components/SettingsGroup';\nimport copyToClipboard from '../Utils/CopyToClipboard';\nimport VisibilityListener from '../Utils/VisibilityListener';\n\n\nconst styles = theme => ({\n    imageContainer: {\n        padding: theme.spacing(2),\n        height: 200,\n        width: 200,\n    },\n    root: {\n        padding: theme.spacing(3, 2),\n        margin: theme.spacing(2),\n    },\n    detailsContainer: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n})\n\nconst onButtonTheme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n});\n\nconst powerRegex = RegExp('POWER\\D*')\nconst dimmerRegex = RegExp('Dimmer\\D*')\n\n\nconst DimmerSlider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n        width: 300,\n        paddingTop: 70,\n        paddingBottom: 10,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus,&:hover,&$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\n\nconst templateGPIOIndex = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"9\", \"10\", \"12\", \"13\", \"14\", \"15\", \"16\"]\n\nconst templateFlagOptions = [\n    { value: 0, text: \"No features\" },\n    { value: 1, text: \"Analog Value\" },\n    { value: 2, text: \"Temperatue\" },\n    { value: 3, text: \"Light\" },\n    { value: 4, text: \"Button\" },\n    { value: 5, text: \"Buttoni\" },\n    { value: 15, text: \"User configured (same as GPIO 255)\" },\n]\n\nclass TasmotaDevice extends Component {\n\n    deviceConnector = null;\n    deviceConfig = null;\n\n    visibilityListener = this.onWindowVisibilityChanged.bind(this)\n\n    constructor(props) {\n        super(props);\n        this.macAddress = this.props.macAddress;\n        this.state = {\n            deviceInfo: null,\n            dimmerAnchors: {},\n            online: false,\n            currentTemplate: {},\n            currentModuleConfig: [],\n            currentModuleType: 0,\n            pendingCommand: null,\n        }\n    }\n\n    onWindowVisibilityChanged(visible) {\n        if (visible) {\n            this.deviceConnector.resume();\n        } else {\n            this.deviceConnector.pause();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.macAddress !== this.macAddress) {\n            this.deviceConnector.disconnect();\n            this.deviceConnector = this.props.deviceManager.getDeviceConnector(nextProps.macAddress, this.props.deviceManager.getDevice(nextProps.macAddress).status0Response.StatusNET.IPAddress);\n            this.deviceConfig = this.props.deviceManager.getTasmotaConfig(nextProps.macAddress)\n            this.deviceConnector.connect();\n        }\n    }\n\n    componentWillMount() {\n        this.deviceConfig = this.props.deviceManager.getTasmotaConfig(this.macAddress)\n        let deviceInfo = this.props.deviceManager.getDevice(this.macAddress)\n        this.setState({\n            deviceInfo: deviceInfo,\n            currentTemplate: deviceInfo.templateResponse,\n        })\n        if (!this.deviceConnector) {\n            this.deviceConnector = this.props.deviceManager.getDeviceConnector(this.macAddress, this.props.deviceManager.getDevice(this.macAddress).status0Response.StatusNET.IPAddress);\n        }\n        this.setState({\n            online: this.deviceConnector.online\n        })\n        this.deviceConnector.connect(this);\n        VisibilityListener.addVisibilityChangeCallback(this.visibilityListener);\n    }\n\n    componentWillUnmount() {\n        VisibilityListener.removeVisibilityChangeCallback(this.visibilityListener);\n        this.deviceConnector.disconnect(this);\n    }\n\n    updateDeviceInfoState(updatedInfo) {\n        this.setState({ deviceInfo: { ...this.state.deviceInfo, ...updatedInfo } })\n        this.props.deviceManager.updateDevice(this.macAddress, updatedInfo)\n    }\n\n    onCommandResponse(cmnd, success, response) {\n        // console.log('Tasmota Device onCommandResponse cmnd: %s response : %O', cmnd, response)\n        let currentState = this.state.online\n\n        this.setState({ online: success });\n\n        if (success) {\n\n            if (!currentState) {\n                this.deviceConnector.performCommandOnDevice('Status 0')\n                if (this.state.pendingCommand) {\n                    this.deviceConnector.performCommandOnDevice(this.state.pendingCommand)\n                    this.setState( {pendingCommand: null})\n                }\n            }\n\n            if (cmnd === 'Status 0') {\n                // console.log('Status0 %s :  %O', this.macAddress, response);\n                this.updateDeviceInfoState({ status0Response: response })\n            } else if (cmnd === 'Template') {\n                this.updateDeviceInfoState({ templateResponse: response })\n                this.setState({ currentTemplate: response })\n                this.deviceConnector.performCommandOnDeviceDirect('GPIOS')\n            } else if (cmnd.startsWith('Template {')) {\n                this.updateDeviceInfoState({ templateResponse: response })\n                this.setState({ currentTemplate: response })\n            } else if (cmnd === 'GPIO 255' || cmnd === 'GPIO') {\n                // console.log('GPIO Response : %O', response)\n                if (cmnd === 'GPIO') {\n                    this.updateDeviceInfoState({ gpioResponse: response })\n                    this.setState({ currentModuleConfig: this.deviceConfig.gpioResponseFormatter(response)})\n                } else {\n                    this.updateDeviceInfoState({ gpio255Response: response })\n                }\n                this.deviceConnector.performCommandOnDeviceDirect('GPIOS')\n            } else if (cmnd === 'GPIOS') {\n                this.updateDeviceInfoState({ gpiosResponse: response })\n                this.deviceConnector.performCommandOnDeviceDirect('Modules')\n            } else if (cmnd === 'Modules') {\n                this.updateDeviceInfoState({ modulesResponse: response })\n            } else if (cmnd === 'State') {\n\n                if (response.Module) {\n                    delete response.Module\n                }\n\n                var status0Clone = Object.assign({}, this.state.deviceInfo.status0Response);\n\n                var statusNames = Object.keys(status0Clone)\n\n                statusNames.forEach((status) => {\n                    Object.keys(status0Clone[status]).forEach((param) => {\n                        if (response[param]) {\n                            status0Clone[status][param] = response[param]\n                        }\n                    })\n                })\n\n                this.updateDeviceInfoState({ status0Response: status0Clone })\n\n            } else if (cmnd === 'Status 8') {\n\n                var status0Clone = Object.assign({}, this.state.deviceInfo.status0Response);\n                status0Clone.StatusSNS = response.StatusSNS\n\n                this.updateDeviceInfoState({ status0Response: status0Clone })\n            } else if (cmnd === 'Module') {\n                this.updateDeviceInfoState({ moduleResponse: response })\n                this.setState({ currentModuleType: Object.keys(response.Module)[0] })\n            } else if (cmnd === 'WifiPower') {\n                this.updateDeviceInfoState({ wifiPowerResponse: response })\n            }\n        }\n    }\n\n    powerToggle(button, event) {\n        event.stopPropagation();\n        console.log('Toggle power ' + button)\n        this.deviceConnector.performCommandOnDevice(button + ' TOGGLE');\n    }\n\n    dimmerUpdate(dimmer, event, newValue) {\n        console.log('Dimmer id : %O, value %O newValue %O', dimmer, event, newValue);\n        event.stopPropagation()\n        this.deviceConnector.performCommandOnDevice(dimmer + ' ' + newValue);\n    }\n\n    getModuleDisplayText() {\n        if (this.state.deviceInfo.moduleResponse) {\n            let moduleParsed = this.deviceConfig.moduleResponseParser(this.state.deviceInfo.moduleResponse)\n            let moduleNum = Object.keys(moduleParsed.Module)[0];\n            return `${moduleNum} (${moduleParsed.Module[moduleNum]})`\n        } else {\n            return ''\n        }\n    }\n\n    renderTypeTableStatusRow() {\n        return (\n            <TableRow key={this.props.macAddress}>\n                <TableCell component=\"th\" scope=\"row\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                        <Box fontSize={16}>\n                            {this.state.deviceInfo.status0Response.Status.FriendlyName[0]}\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"row\">\n                            {this.props.actionButtons}\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell>{this.renderConnectivityStatus()}</TableCell>\n                <TableCell>{this.getModuleDisplayText()}</TableCell>\n                <TableCell><Box flex={1} flexDirection='row'>{this.renderDetailsControlsButtons('Table')}</Box></TableCell>\n                <TableCell>{this.renderDetailsControlsDimmers('Table')}</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTypeTableHealthRow() {\n        return (\n            <TableRow key={this.props.macAddress}>\n                <TableCell component=\"th\" scope=\"row\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                        <Box fontSize={16}>\n                            {this.state.deviceInfo.status0Response.Status.FriendlyName[0]}\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"row\">\n                            {this.props.actionButtons}\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell>{this.renderConnectivityStatus()}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.RSSI}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Uptime}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.MqttCount}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.LinkCount}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.Downtime}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusFWR.Version}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusFWR.Core}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusPRM.BootCount}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusPRM.RestartReason}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.LoadAvg}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Sleep}</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTypeTableWifiRow() {\n        return (\n            <TableRow key={this.props.macAddress}>\n                <TableCell component=\"th\" scope=\"row\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                        <Box fontSize={16}>\n                            {this.state.deviceInfo.status0Response.Status.FriendlyName[0]}\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"row\">\n                            {this.props.actionButtons}\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell>{this.renderConnectivityStatus()}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.RSSI}</TableCell>\n                <TableCell>{this.state.deviceInfo.wifiPowerResponse ? this.state.deviceInfo.wifiPowerResponse.WifiPower : 'Unsupported'}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.BSSId}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.LinkCount}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.Downtime}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusNET.Hostname}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusNET.Mac}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusNET.IPAddress}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusNET.Gateway}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.SSId}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.Channel}</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTypeTableMqttRow() {\n        return (\n            <TableRow key={this.props.macAddress}>\n                <TableCell component=\"th\" scope=\"row\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                        <Box fontSize={16}>\n                            {this.state.deviceInfo.status0Response.Status.FriendlyName[0]}\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"row\">\n                            {this.props.actionButtons}\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell>{this.renderConnectivityStatus()}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.RSSI}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.MqttCount}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.Status.Topic}</TableCell>\n                <TableCell>'Full Topic - N/A'</TableCell>\n                <TableCell>'Command Topic - N/A'</TableCell>\n                <TableCell>'Stat Topic - N/A'</TableCell>\n                <TableCell>'Tele Topic - N/A'</TableCell>\n                <TableCell>'Fallback Topic - N/A'</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusPRM.GroupTopic}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusMQT.MqttHost}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusMQT.MqttPort}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusMQT.MqttClient}</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTypeTableFirmwareRow() {\n        return (\n            <TableRow key={this.props.macAddress}>\n                <TableCell component=\"th\" scope=\"row\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                        <Box fontSize={16}>\n                            {this.state.deviceInfo.status0Response.Status.FriendlyName[0]}\n                        </Box>\n                        <Box display=\"flex\" flexDirection=\"row\">\n                            {this.props.actionButtons}\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell>{this.renderConnectivityStatus()}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusFWR.Version}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusFWR.Core}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusFWR.SDK}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusMEM.ProgramSize}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusMEM.Free}</TableCell>\n                <TableCell>{this.state.deviceInfo.status0Response.StatusPRM.OtaUrl}</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTypeList() {\n        return (\n            <div style={{ width: '100%' }}>\n                <Box display=\"flex\">\n                    <DeveloperBoardIcon />\n                    <Box display=\"flex\" flexGrow={1} marginLeft={2}>\n                        <Typography>\n                            {/* {this.state.displayName} */}\n                        </Typography>\n                        {this.renderDetailsControlsDimmers()}\n                        {this.renderDetailsControlsButtons()}\n                    </Box>\n                    {this.props.actionButtons}\n                </Box>\n            </div>\n        )\n    }\n\n    renderConnectivityStatus() {\n        return (\n            <Tooltip title={this.state.online ? \"Online\" : \"Offline\"} >\n                <ContactlessIcon color={this.state.online ? \"primary\" : \"secondary\"} />\n            </Tooltip>\n        )\n    }\n\n    renderDetailsImage() {\n        return (\n            <Svg src=\"https://raw.githubusercontent.com/arendst/Tasmota/development/tools/logo/TASMOTA_Symbol_Vector.svg\" width=\"90%\" height=\"90%\" padding=\"20\" />\n        )\n    }\n\n    renderDetailsControlsButtons(type = 'Details') {\n        if (this.state.deviceInfo.status0Response) {\n            let buttons = Object.entries(this.state.deviceInfo.status0Response['StatusSTS']).filter(([key, value]) => {\n                if (powerRegex.test(key)) {\n                    return [key, value];\n                }\n            })\n\n            // console.log('DetailsControls buttons : %O', buttons)\n\n            return buttons.map(([key, value]) => {\n\n                let display = key;\n                if (type === 'Table') {\n                    display = key.replace('POWER', '');\n\n                    if (display === '') {\n                        display = '1'\n                    }\n                }\n\n                if (value === 'ON') {\n                    return (\n                        <ThemeProvider theme={onButtonTheme} key={key}>\n                            <Button variant=\"contained\" key={key} color=\"primary\" onClick={(event) => this.powerToggle(key, event)}>{display}</Button>\n                        </ThemeProvider>\n                    )\n                } else {\n                    return (\n                        <Button variant=\"contained\" key={key} onClick={(event) => this.powerToggle(key, event)}>{display}</Button>\n                    )\n                }\n            })\n        }\n    }\n\n    openDimmerPopover(dimmer, event) {\n        event.stopPropagation()\n        let newAnchors = Object.assign({}, this.state.dimmerAnchors);\n        newAnchors[dimmer] = event.target\n        this.setState({\n            dimmerAnchors: newAnchors,\n        })\n    }\n\n    dimmerPopoverClosed(dimmer, event) {\n        event.stopPropagation()\n        let newAnchors = Object.assign({}, this.state.dimmerAnchors);\n        delete newAnchors[dimmer]\n        this.setState({\n            dimmerAnchors: newAnchors,\n        })\n    }\n\n\n    renderDetailsControlsDimmers(type = 'Details') {\n        if (this.state.deviceInfo.status0Response) {\n            let dimmers = Object.entries(this.state.deviceInfo.status0Response['StatusSTS']).filter(([key, value]) => {\n                if (dimmerRegex.test(key)) {\n                    return [key, value];\n                }\n            })\n\n            // console.log('DetailsControls dimmers : %O', dimmers)\n\n            return dimmers.map(([key, value]) => {\n\n                let display = key + ' ' + value;\n                if (type === 'Table') {\n                    display = key.replace('Dimmer', 'Dim');\n                    display += ':' + value\n                }\n\n                return (\n                    <div>\n                        <Button variant=\"contained\" key={key} onClick={(event) => this.openDimmerPopover(key, event)}>{display}</Button>\n\n                        <Popover\n                            id={'dimmerPop' + key}\n                            open={Boolean(this.state.dimmerAnchors[key])}\n                            anchorEl={this.state.dimmerAnchors[key]}\n                            onClose={(event) => this.dimmerPopoverClosed(key, event)}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'center',\n                            }}\n                        >\n                            <DimmerSlider\n                                defaultValue={value}\n                                id={key}\n                                aria-labelledby={key + 'slider'}\n                                valueLabelDisplay=\"on\"\n                                step={1}\n                                min={1}\n                                max={100}\n                                onChange={(event, value) => event.stopPropagation()}\n                                onChangeCommitted={(event, value) => this.dimmerUpdate(key, event, value)}\n                            />\n                        </Popover>\n                    </div>\n                )\n            })\n        }\n    }\n\n    renderDetailsStatuses() {\n\n        return Object.entries(this.state.deviceInfo.status0Response).map(([cmnd, cmndData]) => {\n\n            return (\n                <ExpansionPanel key={cmnd}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography>{cmnd}</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Table aria-label=\"simple table\" size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Key</TableCell>\n                                    <TableCell>Value</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {Object.entries(cmndData).map(([key, value]) => {\n                                    return (\n                                        <TableRow key={key}>\n                                            <TableCell align=\"left\">{key}</TableCell>\n                                            <TableCell align=\"left\">\n                                                <Typography display=\"inline\">\n                                                    {JSON.stringify(value, null, 2)}\n                                                </Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            )\n\n\n        })\n\n    }\n\n    convertHexStringToBitArray(bytesString) {\n        var bitArray = [];\n        var digitValue = 0;\n        let charArray = bytesString.toLowerCase().split('');\n\n\n        charArray.forEach((char, index) => {\n            digitValue = '0123456789abcdefgh'.indexOf(char);\n            for (let n = 3; n >= 0; n--) {\n                bitArray.push((digitValue >> n) & 1)\n            }\n        })\n\n        // console.log('ByteString: %s to bitArray : %O', bytesString, bitArray.reverse())\n        return bitArray.reverse()\n    }\n\n\n    renderDetailsSetOptions() {\n        return (\n            <ExpansionPanel key=\"SetOptionFlagExpansionPanel\" TransitionProps={{ unmountOnExit: true, mountOnEnter: true }}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>SetOption Flags</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <List dense >\n                        {this.renderDetailsSetOptionsListItems()}\n                    </List>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    }\n\n    changeSetOption(setOption, event) {\n        event.stopPropagation()\n        this.deviceConnector.performCommandOnDevice(setOption + (event.target.checked ? ' 1' : ' 0'));\n    }\n\n    renderDetailsSetOptionsListItems() {\n\n        return this.state.deviceInfo.status0Response.StatusLOG.SetOption.map((setOptionStr, index) => {\n            if (index !== 1) {\n                let valueArray = this.convertHexStringToBitArray(setOptionStr)\n                return this.deviceConfig.setOptionsStatusMaps[index].items.map((item, itemIndex) => {\n                    if (item.name !== '' && item.description !== '') {\n                        var soValue = itemIndex + this.deviceConfig.setOptionsStatusMaps[index].setOptionStart;\n                        // console.log('SetOption%d (%s) : %d', soValue, item.name, valueArray[itemIndex])\n                        return (\n                            <React.Fragment>\n                                <ListItem key={'SetOption' + soValue}>\n                                    <ListItemText id={'checkbox-lable-SetOption' + soValue} primary={`SetOption${soValue}`}\n                                        secondary={item.description} />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            edge=\"end\"\n                                            checked={valueArray[itemIndex] === 1}\n                                            onChange={(event) => this.changeSetOption('SetOption' + soValue, event)}\n                                        // disabled\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider variant=\"fullWidth\" component=\"li\" />\n                            </React.Fragment>\n                        )\n                    }\n                })\n            }\n        })\n    }\n\n    getPanelCommandData = command => (event, isExpanded) => {\n        event.stopPropagation()\n        if (isExpanded) {\n            this.deviceConnector.performCommandOnDeviceDirect(command);\n        }\n    }\n\n    getAvailableGPIOS() {\n        var availableGPIOs = []\n\n        var gpioObject = Object.keys(this.state.deviceInfo.gpiosResponse)\n\n        for (let key of gpioObject) {\n            for (let [gpioNum, gpioName] of Object.entries(this.state.deviceInfo.gpiosResponse[key])) {\n                availableGPIOs.push({ gpioNum: gpioNum, gpioName: gpioName })\n            }\n        }\n\n        availableGPIOs.push({ gpioNum: 255, gpioName: \"User\" })\n        return availableGPIOs\n    }\n\n    getGPIOName(gpio) {\n        var keys = Object.keys(this.state.deviceInfo.gpiosResponse)\n\n        if (gpio === 255) {\n            return 'User'\n        }\n\n        for (let n = 0; n < keys.length; n++) {\n            // console.log(\"Keys %s\", this.state.deviceInfo.gpiosResponse[keys[n]])\n            if (!Array.isArray(this.state.deviceInfo.gpiosResponse[keys[n]])) {\n                if (this.state.deviceInfo.gpiosResponse[keys[n]][gpio]) {\n                    return this.state.deviceInfo.gpiosResponse[keys[n]][gpio]\n                }\n            } else {\n                for (let i = 0; i < this.state.deviceInfo.gpiosResponse[keys[n]].length; i++) {\n                    if (this.state.deviceInfo.gpiosResponse[keys[n]][i].startsWith(gpio.toString() + ' ')) {\n                        return this.state.deviceInfo.gpiosResponse[keys[n]][i].replace(gpio.toString(), \"\")\n                    }\n                }\n            }\n        }\n\n        return 'Unknown'\n    }\n\n    onTemplateGPIOChanged(gpioindex, event) {\n        let newTemplate = Object.assign({}, this.state.currentTemplate)\n        newTemplate.GPIO[gpioindex] = parseInt(event.target.value, 10)\n        this.setState({ currentTemplate: newTemplate })\n    }\n\n\n    onTemplateNameUpdated(oldName, newName) {\n        let newTemplate = Object.assign({}, this.state.currentTemplate)\n        newTemplate.NAME = newName\n        this.setState({ currentTemplate: newTemplate })\n    }\n\n    onTemplateFlagChanged(event) {\n        let newTemplate = Object.assign({}, this.state.currentTemplate)\n        newTemplate.FLAG = parseInt(event.target.value, 10)\n        this.setState({ currentTemplate: newTemplate })\n    }\n\n    onTemplateBaseChanged(event) {\n        let newTemplate = Object.assign({}, this.state.currentTemplate)\n        newTemplate.BASE = parseInt(event.target.value, 10)\n        this.setState({ currentTemplate: newTemplate })\n    }\n\n    getAvailableModules() {\n        var availableModules = []\n\n        var moduleObject = Object.keys(this.state.deviceInfo.modulesResponse)\n\n        for (let key of moduleObject) {\n            for (let [moduleNum, moduleName] of Object.entries(this.state.deviceInfo.modulesResponse[key])) {\n                availableModules.push({ moduleNum: moduleNum, moduleName: moduleName })\n            }\n        }\n\n        return availableModules\n    }\n\n    renderTemplateResponse() {\n\n        return (\n            <Table size=\"small\">\n                <TableBody>\n                    <TableRow>\n                        <TableCell>NAME</TableCell>\n                        <TableCell><EditableSetting settingUpdatedCallback={this.onTemplateNameUpdated.bind(this)} currentValue={this.state.currentTemplate.NAME} /></TableCell>\n                    </TableRow>\n\n                    {\n                        this.state.currentTemplate.GPIO.map((gpio, index) => {\n                            return (\n                                <TableRow>\n                                    <TableCell>{`GPIO${templateGPIOIndex[index]}`}</TableCell>\n                                    <TableCell>\n                                        <FormControl>\n                                            <Select\n                                                labelId={`template-select-label-gpio${index}`}\n                                                id=\"weblog-select\"\n                                                value={gpio}\n                                                onChange={(event) => this.onTemplateGPIOChanged(index, event)}\n                                            >\n                                                {this.getAvailableGPIOS().map((availableGPIO, index) => {\n                                                    return <MenuItem value={availableGPIO.gpioNum}>{`${availableGPIO.gpioName} (${availableGPIO.gpioNum})`}</MenuItem>\n                                                })}\n                                            </Select>\n                                        </FormControl>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })\n                    }\n\n                    <TableRow>\n                        <TableCell>FLAG</TableCell>\n                        <TableCell>\n                            <FormControl>\n                                <Select\n                                    labelId={`template-select-label-flag`}\n                                    id=\"template-flag\"\n                                    value={this.state.currentTemplate.FLAG}\n                                    onChange={(event) => this.onTemplateFlagChanged(event)}\n                                >\n                                    {templateFlagOptions.map((templateFlag, index) => {\n                                        return <MenuItem value={templateFlag.value}>{`${templateFlag.text} (${templateFlag.value})`}</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>BASE</TableCell>\n                        <TableCell>\n                            <FormControl>\n                                <Select\n                                    labelId={`template-select-label-module`}\n                                    id=\"template-module\"\n                                    value={this.state.currentTemplate.BASE}\n                                    onChange={(event) => this.onTemplateBaseChanged(event)}\n                                >\n                                    {this.getAvailableModules().map((mod, index) => {\n                                        return <MenuItem value={mod.moduleNum}>{`${mod.moduleName} (${mod.moduleNum})`}</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </TableCell>\n                    </TableRow>\n\n                </TableBody>\n            </Table>\n\n        )\n    }\n\n    saveTemplate(event) {\n        event.stopPropagation()\n        this.deviceConnector.performCommandOnDevice(`Template ${JSON.stringify(this.state.currentTemplate)}`)\n        setTimeout(() => this.setState({ online: false, pendingCommand: 'Template' }), 1000)\n    }\n\n    resetTemplate(event) {\n        event.stopPropagation()\n        this.setState({ currentTemplate: this.state.deviceInfo.templateResponse})\n    }\n\n    isTemplateRenderable() {\n        return this.state.deviceInfo.templateResponse && this.state.deviceInfo.gpiosResponse && this.state.deviceInfo.modulesResponse\n    }\n\n    renderDetailsTemplate() {\n        return (\n            <ExpansionPanel key=\"TemplateDetailsExpansionPanel\" onChange={this.getPanelCommandData('Template')}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>Template</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n\n                    {\n                        this.isTemplateRenderable() ? this.renderTemplateResponse() : <CircularProgress /> \n                    }\n\n                </ExpansionPanelDetails>\n\n                { this.isTemplateRenderable() ? (\n                    <ExpansionPanelActions>\n                        <Button size=\"small\" variant=\"contained\" onClick={(event) => this.resetTemplate(event)}>Reset Template</Button>\n                        <Button size=\"small\" variant=\"contained\" onClick={(event) => this.saveTemplate(event)}>Save Template</Button>\n                    </ExpansionPanelActions>\n                    ) : \"\"\n                }\n            </ExpansionPanel>\n        )\n    }\n\n    renderGPIOResponse() {\n\n        return (\n            <Table size=\"small\">\n                <TableBody>\n\n                    {this.deviceConfig.gpioResponseFormatter(this.state.deviceInfo.gpio255Response).map((gpioObj, index) => {\n                        return (\n                            <TableRow>\n                                <TableCell>{gpioObj.gpio}</TableCell>\n                        <TableCell>{gpioObj.gpioDeviceType} ( {gpioObj.gpioDeviceName} )</TableCell>\n                            </TableRow>\n                        )\n                    })}\n\n                </TableBody>\n            </Table>\n        )\n    }\n\n    onModuleTypeChanged(event) {\n        event.stopPropagation()\n        this.setState( {currentModuleType: event.target.value})\n    }\n\n    onTemplateGPIOChanged(gpio, event) {\n        event.stopPropagation()\n        let newConfig = Object.assign([], this.state.currentModuleConfig);\n        for (let gpioObj of newConfig) {\n            if (gpioObj.gpio === gpio) {\n                gpioObj.gpioDeviceType = event.target.value\n                break\n            }\n        }\n\n        this.setState( {currentModuleConfig: newConfig} )\n    }\n\n    saveModuleConfiguration(event) {\n        event.stopPropagation()\n        let request = `/md?g99=${this.state.currentModuleType - 1}`\n\n        this.state.currentModuleConfig.forEach(function (gpio, index) {\n            request += `&g${gpio.gpio.replace('GPIO', '')}=${gpio.gpioDeviceType}`\n        })\n\n        request += '&save='\n\n        this.deviceConnector.performRequestOnDevice(request)\n        console.log(`Save Module Configuration : ${request}`)\n        setTimeout(() => this.setState({ online: false, pendingCommand: 'GPIO' }), 1000)\n    }\n\n    resetModuleConfiguration(event) {\n        let moduleType = Object.keys(this.state.deviceInfo.moduleResponse.Module)[0]\n        let moduleConfig = this.deviceConfig.gpioResponseFormatter(this.state.deviceInfo.gpioResponse)\n\n        this.setState ( { currentModuleType: moduleType, currentModuleConfig: moduleConfig})\n    }\n\n    renderGPIOConfiguration() {\n\n        return (\n            <Table size=\"small\">\n                <TableBody>\n                    <TableRow>\n                        <TableCell>Module Type</TableCell>\n                        <TableCell>\n                            <FormControl>\n                                <Select\n                                    labelId={`template-select-label-module`}\n                                    id=\"template-module\"\n                                    value={this.state.currentModuleType}\n                                    onChange={(event) => this.onModuleTypeChanged(event)}\n                                >\n                                    {this.getAvailableModules().map((mod, index) => {\n                                        return <MenuItem value={mod.moduleNum}>{`${mod.moduleName} (${mod.moduleNum})`}</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </TableCell>\n                    </TableRow>\n\n\n                    {\n                        this.state.currentModuleConfig.map((gpioObj, index) => {\n                            return (\n                                <TableRow>\n                                    <TableCell>{gpioObj.gpio}</TableCell>\n                                    <TableCell>\n                                        <FormControl>\n                                            <Select\n                                                labelId={`template-select-label-gpio${index}`}\n                                                id=\"weblog-select\"\n                                                value={gpioObj.gpioDeviceType}\n                                                onChange={(event) => this.onTemplateGPIOChanged(gpioObj.gpio, event)}\n                                            >\n                                                {this.getAvailableGPIOS().map((availableGPIO, index) => {\n                                                    return <MenuItem value={availableGPIO.gpioNum}>{`${availableGPIO.gpioName} (${availableGPIO.gpioNum})`}</MenuItem>\n                                                })}\n                                            </Select>\n                                        </FormControl>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })\n                    }\n                </TableBody>\n            </Table>\n\n        )\n    }\n\n    isModuleConfigurationRenderable() {\n        return this.state.deviceInfo.gpioResponse && this.state.deviceInfo.gpiosResponse && this.state.deviceInfo.modulesResponse\n    }\n\n    renderModuleConfiguration() {\n        return (\n            <ExpansionPanel key=\"ModuleConfigurationExpansionPanel\" onChange={this.getPanelCommandData('GPIO')}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>Module GPIO Configuration</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n\n                    {\n                        this.isModuleConfigurationRenderable() ? this.renderGPIOConfiguration() : <CircularProgress /> \n                    }\n\n                </ExpansionPanelDetails>\n\n                { this.isModuleConfigurationRenderable() ? (\n                    <ExpansionPanelActions>\n                        <Button size=\"small\" variant=\"contained\" onClick={(event) => this.resetModuleConfiguration(event)}>Reset Module Configuration</Button>\n                        <Button size=\"small\" variant=\"contained\" onClick={(event) => this.saveModuleConfiguration(event)}>Save Module Configuration</Button>\n                    </ExpansionPanelActions>\n                    ) : \"\"\n                }\n            </ExpansionPanel>\n        )\n    }\n\n    renderDetailsGPIO() {\n        return (\n            <ExpansionPanel key=\"GPIODetailsExpansionPanel\" onChange={this.getPanelCommandData('GPIO 255')}>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography>Module GPIO</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n\n                    {!this.state.deviceInfo.gpio255Response || !this.state.deviceInfo.gpiosResponse ? <CircularProgress /> :\n                        this.renderGPIOResponse()\n                    }\n\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    }\n\n    renderDetailsConnectivity() {\n        return (\n            <React.Fragment>\n                <ExpansionPanel key=\"ConnectivityDetailsExpansionPanel\">\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                    >\n                        <Typography>Connectivity</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Table size=\"small\">\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell />\n                                    <TableCell>Wifi AP</TableCell>\n                                    <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.SSId}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell />\n                                    <TableCell>Wifi Strength</TableCell>\n                                    <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.RSSI}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell />\n                                    <TableCell>Wifi Channel</TableCell>\n                                    <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.Channel}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell />\n                                    <TableCell>Wifi BSSID</TableCell>\n                                    <TableCell>{this.state.deviceInfo.status0Response.StatusSTS.Wifi.BSSId}</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </React.Fragment>\n        )\n    }\n\n    renderTypeSettings() {\n\n\n        return (\n            <React.Fragment>\n\n                {this.deviceConfig.settingsGroups.map((settings) => {\n                    return (\n                        <TableRow>\n                            <TableCell colSpan={3}>\n                                <SettingsGroup deviceConnector={this.deviceConnector} settingsGroup={settings} />\n                            </TableCell>\n                        </TableRow>\n                    )\n                })}\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsSetOptions()}\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        <Typography>Configuration Section</Typography>\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderModuleConfiguration()}\n                    </TableCell>\n                </TableRow>\n\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsTemplate()}\n                    </TableCell>\n                </TableRow>\n\n                {Object.entries(this.deviceConfig.configuration).map(([commandGroupName, commandGroup]) => {\n                    return (\n                        <TableRow>\n                            <TableCell colSpan={3}>\n                                <CommandGroup groupType=\"Configuration\" commandGroupName={commandGroupName} commandGroup={commandGroup} deviceConnector={this.deviceConnector} />\n                            </TableCell>\n                        </TableRow>\n                    )\n                })}\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        <Typography>Commands Section</Typography>\n                    </TableCell>\n                </TableRow>\n\n                {Object.entries(this.deviceConfig.commands).map(([commandGroupName, commandGroup]) => {\n                    return (\n                        <TableRow>\n                            <TableCell colSpan={3}>\n                                <CommandGroup groupType=\"Commands\" commandGroupName={commandGroupName} commandGroup={commandGroup} deviceConnector={this.deviceConnector} />\n                            </TableCell>\n                        </TableRow>\n                    )\n                })}\n\n\n            </React.Fragment>\n        )\n    }\n\n    renderTypeDetails() {\n\n        return (\n            <React.Fragment>\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsConnectivity()}\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderModuleConfiguration()}\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsGPIO()}\n                    </TableCell>\n                </TableRow>\n\n                {this.state.deviceInfo.status0Response.Status.Module === 0 ? (\n                    <TableRow>\n                        <TableCell colSpan={3}>\n                            {this.renderDetailsTemplate()}\n                        </TableCell>\n                    </TableRow>\n\n                )\n                    : null}\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsSetOptions()}\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell align=\"left\"><Typography>Status Report</Typography></TableCell>\n                    <TableCell align=\"center\" colSpan={2}>\n                        <Button variant=\"contained\" key=\"copy-to-clipboard-button\" onClick={(event) => copyToClipboard(JSON.stringify(this.state.deviceInfo.status0Response, null, 2))}>Copy to clipboard</Button>\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell colSpan={3}>\n                        {this.renderDetailsStatuses()}\n                    </TableCell>\n                </TableRow>\n            </React.Fragment>\n        )\n    }\n\n    onFriendlyNameUpdatedCallback(oldName, newName) {\n        this.deviceConnector.performCommandOnDevice(`FriendlyName1 ${newName}`)\n    }\n\n    renderTypeSettingsAndDetails(renderType) {\n        return (\n            <React.Fragment>\n                <Box display=\"flex\" flexDirection=\"column\" flexGrow={1} justifyItems=\"center\" justifyContent=\"center\">\n                    <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\" justifyContent=\"space-around\" alignItems=\"center\">\n                        <Paper align=\"center\" style={{ width: 200, height: 200 }}>\n                            {this.renderDetailsImage()}\n                        </Paper>\n                    </Box>\n                    <Table size=\"medium\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell colSpan={2}></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell align=\"left\"><Typography>FriendlyName</Typography></TableCell>\n                                <TableCell align=\"center\" colSpan={2}>\n                                    <EditableSetting settingUpdatedCallback={this.onFriendlyNameUpdatedCallback.bind(this)} currentValue={this.state.deviceInfo.status0Response.Status.FriendlyName[0]} />\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell align=\"left\"><Typography>Relays</Typography></TableCell>\n                                <TableCell align=\"center\" colSpan={2}>{this.renderDetailsControlsButtons('Table')}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell align=\"left\"><Typography>Light Controls</Typography></TableCell>\n                                <TableCell align=\"center\" colSpan={2}>{this.renderDetailsControlsDimmers('Table')}</TableCell>\n                            </TableRow>\n\n                            {renderType === 'Details' ? this.renderTypeDetails() : null}\n                            {renderType === 'Settings' ? this.renderTypeSettings() : null}\n\n                        </TableBody>\n                    </Table>\n\n                </Box>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        // console.log('Tasmota Device renderType : %s', this.props.renderType)\n        switch (this.props['renderType']) {\n            case 'List':\n                return this.renderTypeList();\n\n            case 'Settings':\n            case 'Details':\n                return this.renderTypeSettingsAndDetails(this.props.renderType);\n\n            case 'Table_Status':\n                return this.renderTypeTableStatusRow();\n\n            case 'Table_Health':\n                return this.renderTypeTableHealthRow();\n\n            case 'Table_WIFI':\n                return this.renderTypeTableWifiRow()\n\n            case 'Table_Mqtt':\n                return this.renderTypeTableMqttRow()\n\n            case 'Table_Firmware':\n                return this.renderTypeTableFirmwareRow()\n\n\n            default:\n                return (\n                    <Typography>\n                        {/* {this.state.displayName} RenderType : {this.props.renderType} */}\n                    </Typography>\n                )\n                break\n        }\n    }\n}\n\nexport default withStyles(styles)(TasmotaDevice);","export default function(text) {\n    const el = document.createElement('textarea');\n    el.value = text\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Table from '@material-ui/core/Table';\nimport Box from '@material-ui/core/Box';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\nimport React from 'react';\nimport TasmotaDevice from '../DeviceTypes/TasmotaDevice';\nimport ActionButton from './ActionButton';\n\nclass DeviceList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    renderItems() {\n        switch (this.props.displayMode) {\n            case \"List\":\n                return this.renderTypeList()\n\n            case \"Table_Status\":\n            case \"Table_Health\":\n            case \"Table_WIFI\":\n            case \"Table_Mqtt\":\n            case \"Table_Firmware\":\n                return this.renderTypeTable()\n\n            case \"Card\":\n                return this.renderTypeCard()\n\n        }\n    }\n\n    renderTypeList() {\n\n        return Object.keys(this.props.devices).map((mac, index) => {\n            let buttons = (\n                <div>\n                    {this.renderButton(\"Details\", \"details\", (event) => this.openDeviceDetails(mac, event), <SettingsApplicationsIcon />)}\n                    {this.renderButton(\"Delete\", \"delete\", (event) => this.deleteDevice(mac, event), <DeleteIcon />)}\n                </div>\n            )\n\n            return (\n                <ExpansionPanel key={mac}>\n                    <ExpansionPanelSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1c-content\"\n                        id=\"panel1c-header\"\n                    >\n                        <TasmotaDevice macAddress={mac} renderType={this.state.displayMode} deviceManager={this.props.deviceManager} actionButtons={buttons} />\n                    </ExpansionPanelSummary>\n                </ExpansionPanel>\n            )\n        })\n    }\n\n    renderTypeCard() {\n        return Object.keys(this.props.devices).map((mac, index) => {\n            return (\n                <TasmotaDevice macAddress={mac} renderType={this.props.displayMode} deviceManager={this.props.deviceManager} />\n            )\n        })\n    }\n\n    renderTableHeaderStatus() {\n        return (\n            <TableRow>\n                <TableCell align=\"center\">Friendly Name</TableCell>\n                <TableCell />\n                <TableCell>Module</TableCell>\n                <TableCell>Power</TableCell>\n                <TableCell>Light Controls</TableCell>\n            </TableRow>\n        )\n    }\n\n\n    renderTableHeaderHealth() {\n        return (\n            <TableRow>\n                <TableCell>Friendly Name</TableCell>\n                <TableCell />\n                <TableCell>RSSI</TableCell>\n                <TableCell>Uptime</TableCell>\n                <TableCell>Mqtt Count</TableCell>\n                <TableCell>Link Count</TableCell>\n                <TableCell>Downtime</TableCell>\n                <TableCell>Version</TableCell>\n                <TableCell>Core</TableCell>\n                <TableCell>Boot Count</TableCell>\n                <TableCell>Restart Reason</TableCell>\n                <TableCell>LoadAvg</TableCell>\n                <TableCell>Sleep</TableCell>\n            </TableRow>\n        )\n    }\n\n\n    renderTableHeaderFirmware() {\n        return (\n            <TableRow>\n                <TableCell>Friendly Name</TableCell>\n                <TableCell />\n                <TableCell>Version</TableCell>\n                <TableCell>Core</TableCell>\n                <TableCell>SDK</TableCell>\n                <TableCell>Program Size</TableCell>\n                <TableCell>Free</TableCell>\n                <TableCell>OtaURL</TableCell>\n            </TableRow>\n        )\n    }\n\n    renderTableHeaderWifi() {\n        return (\n            <TableRow>\n                <TableCell>Friendly Name</TableCell>\n                <TableCell />\n                <TableCell>RSSI</TableCell>\n                <TableCell>WifiPower</TableCell>\n                <TableCell>BSSID</TableCell>\n                <TableCell>Link Count</TableCell>\n                <TableCell>Downtime</TableCell>\n                <TableCell>Hostname</TableCell>\n                <TableCell>Mac Address</TableCell>\n                <TableCell>IP Address</TableCell>\n                <TableCell>Gateway</TableCell>\n                <TableCell>SSID</TableCell>\n                <TableCell>Channel</TableCell>\n            </TableRow>\n        )\n    }\n\n\n    renderTableHeaderMqtt() {\n        return (\n            <TableRow>\n                <TableCell>Friendly Name</TableCell>\n                <TableCell />\n                <TableCell>RSSI</TableCell>\n                <TableCell>Mqtt Count</TableCell>\n                <TableCell>Topic</TableCell>\n                <TableCell>Full Topic</TableCell>\n                <TableCell>Command Topic</TableCell>\n                <TableCell>Stat Topic</TableCell>\n                <TableCell>Tele Topic</TableCell>\n                <TableCell>Fallback Topic</TableCell>\n                <TableCell>Group Topic</TableCell>\n                <TableCell>Mqtt Host</TableCell>\n                <TableCell>Mqtt Port</TableCell>\n                <TableCell>Mqtt Client</TableCell>\n            </TableRow>\n        )\n    }\n    renderTableHeader() {\n        // console.log(this.props.displayMode)\n        switch (this.props.displayMode) {\n            case 'Table_Status':\n                return this.renderTableHeaderStatus()\n\n            case 'Table_Health':\n                return this.renderTableHeaderHealth()\n\n            case 'Table_WIFI':\n                return this.renderTableHeaderWifi()\n\n            case 'Table_Mqtt':\n                return this.renderTableHeaderMqtt()\n\n            case 'Table_Firmware':\n                return this.renderTableHeaderFirmware()\n\n        }\n    }\n\n    renderTypeTable() {\n        return (\n\n            <Table stickyHeader aria-label=\"simple table\" >\n                {Object.keys(this.props.deviceSections).map((section, index) => {\n                    return (\n                        <React.Fragment>\n                            {Object.keys(this.props.deviceSections[section].devices).length > 0 ?\n                                <TableRow><h3>{section}</h3></TableRow> : null}\n\n                            {index === 0 ?\n                                <TableHead>\n                                    {this.renderTableHeader()}\n                                </TableHead>\n                                : null}\n                            <TableBody>\n                                {Object.keys(this.props.deviceSections[section].devices).map((mac, index) => {\n                                    let buttons = this.props.deviceSections[section].itemButtons.map((button, index) => {\n                                        return (\n                                            <ActionButton\n                                                key={mac + button.label}\n                                                toolTip={button.toolTip}\n                                                label={button.label}\n                                                icon={button.icon}\n                                                onButtonClick={(event) => button.onButtonClick(mac, event)}\n                                            />\n                                        )\n                                    })\n\n                                    return <TasmotaDevice key={mac} macAddress={mac} renderType={this.props.displayMode} deviceManager={this.props.deviceManager} actionButtons={buttons} />\n                                })\n                                }\n                            </TableBody>\n                        </React.Fragment>\n                    )\n                })}\n\n            </Table>\n        )\n    }\n\n    render() {\n        return this.renderItems()\n    }\n}\nexport default DeviceList","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport Box from '@material-ui/core/Box';\nimport HealingIcon from '@material-ui/icons/Healing';\nimport SettingsInputAntennaIcon from '@material-ui/icons/SettingsInputAntenna';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport ActionButton from './ActionButton'\n\nclass DisplayModeButtons extends React.Component {\n\n    render() {\n        return (\n            <Box display=\"flex\" flexGrow={1} justifyContent=\"flex-start\">\n                <ActionButton\n                    toolTip=\"Status View\"\n                    label=\"status\"\n                    icon={<TableChartIcon />}\n                    onButtonClick={() => this.props.setState({ displayMode: \"Table_Status\" })}\n                    selected={this.props.displayMode === \"Table_Status\"}\n                    selectedIcon={<TableChartIcon color=\"primary\" />}\n                />\n\n                <ActionButton\n                    toolTip=\"Health View\"\n                    label=\"health\"\n                    icon={<HealingIcon />}\n                    onButtonClick={() => this.props.setState({ displayMode: \"Table_Health\" })}\n                    selected={this.props.displayMode === \"Table_Health\"}\n                    selectedIcon={<HealingIcon color=\"primary\" />}\n                />\n\n                <ActionButton\n                    toolTip=\"Firmware View\"\n                    label=\"firmware\"\n                    icon={<SystemUpdateAltIcon />}\n                    onButtonClick={() => this.props.setState({ displayMode: \"Table_Firmware\" })}\n                    selected={this.props.displayMode === \"Table_Firmware\"}\n                    selectedIcon={<SystemUpdateAltIcon color=\"primary\" />}\n                />\n\n\n                <ActionButton\n                    toolTip=\"Wifi View\"\n                    label=\"wifi\"\n                    icon={<WifiIcon />}\n                    onButtonClick={() => this.props.setState({ displayMode: \"Table_WIFI\" })}\n                    selected={this.props.displayMode === \"Table_WIFI\"}\n                    selectedIcon={<WifiIcon color=\"primary\" />}\n                />\n\n                <ActionButton\n                    toolTip=\"Mqtt View\"\n                    label=\"MQTT\"\n                    icon={<SettingsInputAntennaIcon />}\n                    onButtonClick={() => this.props.setState({ displayMode: \"Table_Mqtt\" })}\n                    selected={this.props.displayMode === \"Table_Mqtt\"}\n                    selectedIcon={<SettingsInputAntennaIcon color=\"primary\" />}\n                />\n\n            </Box>)\n    }\n}\n\nexport default DisplayModeButtons","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\nimport React from 'react';\nimport DeviceList from '../Components/DeviceList';\nimport DisplayTypeButtons from '../Components/DisplayModeButtons';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CallToActionIcon from '@material-ui/icons/CallToAction';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nclass Devices extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            devices: this.props.deviceManager.getDevices(),\n            displayMode: this.props.appConfig.getAppConfig('device_view_mode') || \"Table_Status\",\n        }\n    }\n\n    buttons = [{\n        toolTip: \"Details\",\n        label: \"details\",\n        icon: <InfoIcon />,\n        onButtonClick: (mac, event) => this.openDeviceDetails(mac, event),\n    }, {\n        toolTip: \"Settings\",\n        label: \"settings\",\n        icon: <SettingsApplicationsIcon />,\n        onButtonClick: (mac, event) => this.openDeviceSettings(mac, event),\n    }, {\n        toolTip: \"Console\",\n        label: \"console\",\n        icon: <CallToActionIcon />,\n        onButtonClick: (mac, event) => this.openDeviceConsole(mac, event),\n    }, {\n        toolTip: \"WebUI\",\n        label: \"webui\",\n        icon: <OpenInBrowserIcon />,\n        onButtonClick: (mac, event) => this.openWebUI(mac, event),\n    }, {\n        toolTip: \"Delete\",\n        label: \"delete\",\n        icon: <DeleteIcon />,\n        onButtonClick: (mac, event) => this.deleteDevice(mac, event),\n    }]\n\n    openDeviceDetails = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/details/' + macAddress);\n    }\n\n    openDeviceSettings = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/settings/' + macAddress);\n    }\n\n    openDeviceConsole = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/console/' + macAddress);\n    }\n\n    openWebUI  = (macAddress, event) => {\n        event.stopPropagation();\n        let ip = this.props.deviceManager.getDevice(macAddress).status0Response.StatusNET.IPAddress\n        window.open(`http://${ip}`)\n    }\n\n    deleteDevice = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.deviceManager.removeDevice(macAddress);\n        const newDevices = this.props.deviceManager.getDevices();\n        this.setState({\n            devices: newDevices\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.displayMode !== this.state.displayMode) {\n            this.props.appConfig.putAppConfig('device_view_mode', this.state.displayMode)\n        }\n    }\n\n    componentDidMount() {\n        window.gtag('event', 'Devices', { 'value' : this.state.displayMode });\n        window.gtag('event', 'screen_view', { 'screen_name': 'Devices'});\n    }\n\n    render() {\n\n        return (\n            <Box display=\"flex\" flexGrow={1} flexDirection=\"column\" style={{ overflow: \"visible\", position: \"absolute\" }}>\n                <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                    <h1>Devices</h1>\n                    <DisplayTypeButtons displayMode={this.state.displayMode} setState={(state) => this.setState(state)} />\n                </Box>\n                <DeviceList\n                    displayMode={this.state.displayMode}\n                    deviceSections={{ \"\": { devices: this.state.devices, itemButtons: this.buttons } }}\n                    deviceManager={this.props.deviceManager}\n                />\n\n            </Box>\n        );\n    }\n}\nexport default Devices","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport superagent from 'superagent';\n\nconst commands = {\n    Status0: 'Status 0',\n    State: 'State',\n    Status8: 'Status 8',\n    Module: 'Module',\n    WifiPower: 'WifiPower',\n}\n\nclass TasmotaDeviceConnector {\n\n    deviceIPAddress = \"\";\n    deviceListeners = [];\n    timer = null;\n    // responseMap = [{}];\n\n    constructor(ipAddress, authInfo) {\n        this.deviceIPAddress = ipAddress;\n        this.online = false;\n        this.authInfo = authInfo\n    }\n\n    updateIpAddress(ipAddress) {\n        if (this.deviceIPAddress !== ipAddress) {\n            this.deviceIPAddress = ipAddress\n            this.requestDeviceStatus()\n        }\n    }\n\n    connect(listener) {\n        let index = this.deviceListeners.indexOf(listener)\n        if (index === -1) {\n            this.deviceListeners.push(listener);\n        }\n\n        if (this.deviceListeners.length === 1) {\n            this.resume();\n        }\n    }\n\n    disconnect(listener) {\n        let index = this.deviceListeners.indexOf(listener)\n        if (index !== -1) {\n            this.deviceListeners.splice(index, 1)\n        }\n\n        if (this.deviceListeners.length === 0) {\n            this.pause();\n        }\n    }\n\n    disconnectAll() {\n        this.deviceListeners.forEach((listener) => {\n            this.disconnect(listener)\n        })\n    }\n\n    pause() {\n        if (this.timer) {\n            clearInterval(this.timer);\n            this.timer = null;\n        }\n    }\n\n    resume() {\n        this.pause(); // Clear previous Timer\n        this.timer = setInterval(this.requestDeviceStatus.bind(this), 15000);\n        this.getStatus0();\n    }\n\n    requestDeviceStatus() {\n        this.getState()\n    }\n\n    getStatus0() {\n        this.performCommandOnDeviceDirect(commands.Status0);\n    }\n\n    getWifiPower() {\n        this.performCommandOnDeviceDirect(commands.WifiPower);\n    }\n\n    getModule() {\n        this.performCommandOnDeviceDirect(commands.Module);\n    }\n\n    getState() {\n        this.performCommandOnDeviceDirect(commands.State);\n    }\n\n    getStatus8() {\n        this.performCommandOnDeviceDirect(commands.Status8);\n    }\n\n    onDeviceRequestResponse(args) {\n        console.log(`Request ${args.key} Url : ${args.url} Response: %O`, args.response ? args.response.body : null)\n        this.deviceListeners.forEach(function (deviceListener, index) {\n            if (deviceListener.onDeviceRequestResponse) {\n                deviceListener.onDeviceRequestResponse(args.key, args.success, args.success ? args.response.body : null)\n            }\n        });\n    }\n\n    onCommandResponse(args) {\n        if (args.key === commands.State || args.key === commands.Status0) {\n            this.online = args.success\n        }\n        console.log(`Command ${args.key} Url : ${args.url} Response: %O`, args.response ? args.response.body : null)\n        this.deviceListeners.forEach(function (deviceListener, index) {\n            deviceListener.onCommandResponse(args.key, args.success, args.success ? args.response.body : null)\n        });\n\n        if (!args.success) {\n            console.log(`Command ${args.key} failed. Url : ${args.url} Response: %O`, args.response)\n        }\n\n        if (args.key === commands.State) {\n            this.getStatus8()\n        } else if (args.key === commands.Status0) {\n            this.getModule()\n        } else if (args.key === commands.Module) {\n            this.getWifiPower()\n        }\n    }\n\n    performCommandOnDevice(cmnd) {\n        this.performCommandOnDeviceDirect(cmnd);\n        this.getStatus0();\n    }\n\n    performRequestOnDevice(request) {\n        this.performRequestOnDeviceDirect(request)\n    }\n\n    performRequestOnDeviceDirect(request) {\n        var callback = function (err, response) {\n            // console.log (\"Error : %O Response : %O\", err, response);\n            this.onDeviceRequestResponse({ key: this.request, response: response, error: err, url: this.url, ip: this.ip, success: err ? false : true });\n        }\n        let url = 'http://' + this.deviceIPAddress + request\n\n        if (this.authInfo) {\n            url += `&user=${encodeURIComponent(this.authInfo.username)}&password=${encodeURIComponent(this.authInfo.password)}`\n        }\n\n        if (window.runtimeConfig.proxyMode) {\n            url = '?url=' + encodeURIComponent(url)\n        }\n\n        superagent.get(url)\n            .timeout({\n                response: 5000,  // Wait 5 seconds for the server to start sending,\n                deadline: 10000, // but allow 1 minute for the file to finish loading.\n            })\n            .end(callback.bind({ onDeviceRequestResponse: this.onDeviceRequestResponse.bind(this), ip: this.deviceIPAddress, url: url, request: request }))\n    }\n\n    performCommandOnDeviceDirect(cmnd) {\n        var callback = function (err, response) {\n            // console.log (\"Error : %O Response : %O\", err, response);\n            this.onCommandResponse({ key: this.cmnd, response: response, error: err, url: this.url, ip: this.ip, success: err ? false : true });\n        }\n        let url = 'http://' + this.deviceIPAddress + '/cm?cmnd=' + encodeURIComponent(cmnd);\n\n        if (this.authInfo) {\n            url += `&user=${encodeURIComponent(this.authInfo.username)}&password=${encodeURIComponent(this.authInfo.password)}`\n        }\n\n        if (window.runtimeConfig.proxyMode) {\n            url = '?url=' + encodeURIComponent(url)\n        }\n\n        superagent.get(url)\n            .timeout({\n                response: 5000,  // Wait 5 seconds for the server to start sending,\n                deadline: 10000, // but allow 1 minute for the file to finish loading.\n            })\n            .end(callback.bind({ onCommandResponse: this.onCommandResponse.bind(this), ip: this.deviceIPAddress, url: url, cmnd: cmnd }))\n    }\n}\n\nexport default TasmotaDeviceConnector;\n","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport Commands from './Commands.json'\n\nconst TasmotaConfig_06070000 = {\n    setOptionsStatusMaps: [{\n        structName: \"SysBitfield\",\n        setOptionStart: 0,\n        bitSize: 1,\n        items: [\n            {\n                name: 'save_state',\n                description: 'Save power state and use after restart',\n            }, {\n                name: 'button_restrict',\n                description: 'Control button multipress',\n            }, {\n                name: 'ex_value_units',\n                description: 'Add units to JSON messages',\n            }, {\n                name: 'mqtt_enabled',\n                description: 'Control MQTT',\n            }, {\n                name: 'mqtt_response',\n                description: 'Switch between MQTT Result or Command',\n            }, {\n                name: 'mqtt_power_retain',\n                description: '',\n            }, {\n                name: 'mqtt_button_retain',\n                description: '',\n            }, {\n                name: 'mqtt_switch_retain',\n                description: '',\n            }, {\n                name: 'temperature_conversion',\n                description: 'Switch between Celsius or Fahreheit',\n            }, {\n                name: 'mqtt_sensor_retain',\n                description: 'CMDN_SENSORRETAIN',\n            }, {\n                name: 'mqtt_offline',\n                description: 'Control MQTT LWT message format',\n            }, {\n                name: 'button_swap',\n                description: 'Swap button single and double press functionality',\n            }, {\n                name: 'stop_flash_rotate',\n                description: 'Switch between dynamic or fixed slot flash save location',\n            }, {\n                name: 'button_single',\n                description: 'Support only single press to speed up button press recognition',\n            }, {\n                name: 'interlock',\n                description: '',\n            }, {\n                name: 'pwm_control',\n                description: 'Switch between commands PWM or COLOR/DIMMER/CT/CHANNEL',\n            }, {\n                name: 'ws_clock_reverse',\n                description: 'Set addressable LED Clock scheme parameter',\n            }, {\n                name: 'decimal_text',\n                description: 'Switch between decimal or hexadecimal output',\n            }, {\n                name: 'light_signal',\n                description: 'Pair light signal with CO2 sensor',\n            }, {\n                name: 'hass_discovery',\n                description: 'Control Home Assistant Automatic discovery',\n            }, {\n                name: 'not_power_linked',\n                description: 'Control power in relation fo Dimmer/Color/CT changes',\n            }, {\n                name: 'no_power_on_check',\n                description: 'Show voltage even if powered off',\n            }, {\n                name: 'mqtt_serial',\n                description: '',\n            }, {\n                name: 'mqtt_serial_raw',\n                description: '',\n            }, {\n                name: 'pressure_conversion',\n                description: 'Switch between hPa or mmHg pressure unit',\n            }, {\n                name: 'knx_enabled',\n                description: '',\n            }, {\n                name: 'device_index_enable',\n                description: 'Switch between POWER or POWER1',\n            }, {\n                name: 'knx_enable_enhancement',\n                description: '',\n            }, {\n                name: 'rf_receive_decimal',\n                description: 'RF Receive data format',\n            }, {\n                name: 'ir_receive_decimal',\n                description: 'IR Receive data format',\n            }, {\n                name: 'hass_light',\n                description: 'Enforce HASS Autodiscovery as light',\n            }, {\n                name: 'global_state',\n                description: 'Control link led blinking',\n            }\n        ]\n    }, {\n        structName: \"SysBitfield2\",\n        setOptionStart: 32,\n        bitSize: 1,\n        items: [],\n    }, {\n        structName: \"SysBitfield3\",\n        setOptionStart: 50,\n        bitSize: 1,\n        items: [\n            {\n                name: 'timers_enable',\n                description: '',\n            }, {\n                name: 'user_esp8285_enable',\n                description: 'Enable ESP8285 User GPIOs',\n            }, {\n                name: 'time_append_timezone',\n                description: 'Append timezone to JSON time',\n            }, {\n                name: 'gui_hostname_ip',\n                description: 'Show hostname and IP address in GUI main menu',\n            }, {\n                name: 'tuya_apply_o20',\n                description: 'Apple SetOption20 settings to Tuya device',\n            }, {\n                name: 'mdns_enabled',\n                description: 'Control mDNS Service',\n            }, {\n                name: 'use_wifi_scan',\n                description: 'Scan wifi network at restart for configured APs',\n            }, {\n                name: 'use_wifi_rescan',\n                description: 'Scan wifi network every 44 minutes for configured APs',\n            }, {\n                name: 'receive_raw',\n                description: 'Add IR Raw data to JSON message',\n            }, {\n                name: 'hass_tele_on_power',\n                description: 'Send tele/%topic%/STATE in addition to stat/%topic%/RESULT',\n            }, {\n                name: 'sleep_normal',\n                description: 'Enable normal sleep instead of dynamic sleep',\n            }, {\n                name: 'button_switch_force_local',\n                description: 'Force local operation when button/switch topic is set',\n            }, {\n                name: 'no_hold_retain',\n                description: 'Don\\'t use retain flag on HOLD messages',\n            }, {\n                name: 'no_power_feedback',\n                description: 'Don\\'t scan relay power state at restart',\n            }, {\n                name: 'use_underscore',\n                description: 'Enable \"_\" instead of \"=\" as sensor index separator',\n            }, {\n                name: 'fast_power_cycle_disable',\n                description: 'Disable fast power cycle detection for device reset',\n            }, {\n                name: 'tuya_serial_mqtt_publish',\n                description: 'Enable TuyaReceived messages over Mqtt',\n            }, {\n                name: 'buzzer_enable',\n                description: 'Enable buzzer when available',\n            }, {\n                name: 'pwm_multi_channels',\n                description: 'Enable multi-channels PWM instead of Color PWM',\n            }, {\n                name: 'ex_tuya_dimmer_min_limit',\n                description: '',\n            }, {\n                name: 'energy_weekend',\n                description: '',\n            }, {\n                name: 'dds2382_model',\n                description: 'Select different Modbus registers for Active Energy',\n            }, {\n                name: 'hardware_energy_total',\n                description: 'Enable / Disable hardware energy total counter as reference',\n            }, {\n                name: 'cors_enabled',\n                description: 'Enable HTTP CORS',\n            }, {\n                name: 'ds18x20_internal_pullup',\n                description: 'Enable internal pullip for single DS18x20 sensor',\n            }, {\n                name: 'grouptopic_mode',\n                description: 'GroupTopic replaces %topic% (0) or fixed topic cmnd/grouptopic(1)',\n            }, {\n                name: 'spare26',\n                description: '',\n            }, {\n                name: 'spare27',\n                description: '',\n            }, {\n                name: 'spare28',\n                description: '',\n            }, {\n                name: 'spare29',\n                description: '',\n            }, {\n                name: 'shutter_mode',\n                description: 'Enable shutter support',\n            }, {\n                name: 'pcf8574_ports_inverted',\n                description: 'Invert all ports on PCF8574 devices',\n            }\n        ]\n    }, {\n        structName: \"SysBitfield4\",\n        setOptionStart: 82,\n        bitSize: 1,\n        items: [\n            {\n                name: 'spare00',\n                description: '',\n            }, {\n                name: 'spare01',\n                description: '',\n            }, {\n                name: 'spare02',\n                description: '',\n            }, {\n                name: 'spare03',\n                description: '',\n            }, {\n                name: 'spare04',\n                description: '',\n            }, {\n                name: 'spare05',\n                description: '',\n            }, {\n                name: 'spare06',\n                description: '',\n            }, {\n                name: 'spare07',\n                description: '',\n            }, {\n                name: 'spare08',\n                description: '',\n            }, {\n                name: 'spare09',\n                description: '',\n            }, {\n                name: 'spare10',\n                description: '',\n            }, {\n                name: 'spare11',\n                description: '',\n            }, {\n                name: 'spare12',\n                description: '',\n            }, {\n                name: 'spare13',\n                description: '',\n            }, {\n                name: 'spare14',\n                description: '',\n            }, {\n                name: 'spare15',\n                description: '',\n            }, {\n                name: 'spare16',\n                description: '',\n            }, {\n                name: 'spare17',\n                description: '',\n            }, {\n                name: 'spare18',\n                description: '',\n            }, {\n                name: 'spare19',\n                description: '',\n            }, {\n                name: 'spare20',\n                description: '',\n            }, {\n                name: 'spare21',\n                description: '',\n            }, {\n                name: 'spare22',\n                description: '',\n            }, {\n                name: 'spare23',\n                description: '',\n            }, {\n                name: 'spare24',\n                description: '',\n            }, {\n                name: 'spare25',\n                description: '',\n            }, {\n                name: 'spare26',\n                description: '',\n            }, {\n                name: 'spare27',\n                description: '',\n            }, {\n                name: 'spare28',\n                description: '',\n            }, {\n                name: 'spare29',\n                description: '',\n            }, {\n                name: 'spare30',\n                description: '',\n            }, {\n                name: 'spare31',\n                description: '',\n            }\n        ]\n    }],\n    settingsGroups: [{\n        groupName: \"Mqtt Settings\",\n        settings: [{\n            name: 'Mqtt Host',\n            command: 'MqttHost',\n        }, {\n            name: 'Mqtt User',\n            command: 'MqttUser',\n        }, {\n            name: 'Mqtt Password',\n            command: 'MqttPassword',\n        }]\n    }, {\n        groupName: \"Wifi Settings\",\n        settings: [{\n            name: 'Ssid 1',\n            command: 'Ssid1',\n        }, {\n            name: 'Password 1',\n            command: 'Password1',\n        }, {\n            name: 'Ssid 2',\n            command: 'Ssid2',\n        }, {\n            name: 'Password 2',\n            command: 'Password2',\n        }, {\n            name: 'Hostname',\n            command: 'Hostname',\n        }]\n        // } ,{\n        //     groupName: 'Rules',\n        //     settings: [{\n        //         name: 'Rule 1',\n        //         command: 'Rule1',\n        //     },{\n        //         name: 'Rule 2',\n        //         command: 'Rule2'\n        //     },{\n        //         name: 'Rule 3',\n        //         command: 'Rule3'\n        //     }]\n    }],\n    moduleResponseParser: function (moduleResponse) {\n        if (typeof moduleResponse.Module === 'object') {\n            return moduleResponse\n        } else {\n            let moduleParts = moduleResponse.Module.split(' ')\n            let parsed = { Module: {}}\n            parsed.Module[moduleParts[0]] = moduleParts[1].replace('(', '').replace(')', '')\n            return parsed\n        }\n    },\n    gpioResponseFormatter: function (gpioResponse) {\n        return Object.keys(gpioResponse).map((gpio, index) => {\n            if (typeof gpioResponse[gpio] === 'object') {\n                var key = Object.keys(gpioResponse[gpio])[0]\n                return { gpio: gpio, gpioDeviceType: key, gpioDeviceName: gpioResponse[gpio][key] }\n            } else {\n                return { gpio: gpio, gpioInfo: gpioResponse[gpio] }\n            }\n        })\n    },\n    commands: Commands,\n    configuration: {\n        Button: {\n            ButtonDebounce: Commands.Control.ButtonDebounce,\n            ButtonRetain: Commands.MQTT.ButtonRetain,\n            SetOption11: Commands.SetOptions.SetOption11,\n            SetOption13: Commands.SetOptions.SetOption13,\n            SetOption32: Commands.SetOptions.SetOption32,\n            SetOption40: Commands.SetOptions.SetOption40,\n            SetOption61: Commands.SetOptions.SetOption61,\n        },\n        Switch: {\n            SwitchDebounce: Commands.Control.ButtonDebounce,\n            SwitchRetain: Commands.MQTT.ButtonRetain,\n            'SwitchMode<x>': Commands.Control['SwitchMode<x>'],\n            SetOption32: Commands.SetOptions.SetOption32,\n        },\n        Relay: {\n            BlinkCount: Commands.Control.BlinkCount,\n            BlinkTime: Commands.Control.BlinkTime,\n            PowerOnState: Commands.Control.PowerOnState,\n            PowerRetain: Commands.MQTT.PowerRetain,\n            Interlock: Commands.Control.Interlock,\n            'PusleTime<x>': Commands.Control['PulseTime<x>'],\n            SetOption0: Commands.SetOptions.SetOption0,\n            SetOption26: Commands.SetOptions.SetOption26,\n            SetOption63: Commands.SetOptions.SetOption63,\n        }\n    }\n\n}\n\nexport default TasmotaConfig_06070000","import TasmotaConfig_06070000 from './TasmotaConfig-6.7.0.0'\n\nfunction updatedConfig() {\n\n    let TasmotaConfig_07010200 = {\n        settingsGroups: TasmotaConfig_06070000.settingsGroups,\n        moduleResponseParser: TasmotaConfig_06070000.moduleResponseParser,\n        gpioResponseFormatter: TasmotaConfig_06070000.gpioResponseFormatter,\n        commands: {},\n        configuration: TasmotaConfig_06070000.configuration,\n    }\n\n    TasmotaConfig_07010200.setOptionsStatusMaps =\n        [{\n            structName: \"SysBitfield\",\n            setOptionStart: 0,\n            bitSize: 1,\n            items: [\n                {\n                    name: 'save_state',\n                    description: 'Save power state and use after restart',\n                }, {\n                    name: 'button_restrict',\n                    description: 'Control button multipress',\n                }, {\n                    name: 'ex_value_units',\n                    description: 'Add units to JSON messages',\n                }, {\n                    name: 'mqtt_enabled',\n                    description: 'Control MQTT',\n                }, {\n                    name: 'mqtt_response',\n                    description: 'Switch between MQTT Result or Command',\n                }, {\n                    name: 'mqtt_power_retain',\n                    description: '',\n                }, {\n                    name: 'mqtt_button_retain',\n                    description: '',\n                }, {\n                    name: 'mqtt_switch_retain',\n                    description: '',\n                }, {\n                    name: 'temperature_conversion',\n                    description: 'Switch between Celsius or Fahreheit',\n                }, {\n                    name: 'mqtt_sensor_retain',\n                    description: 'CMDN_SENSORRETAIN',\n                }, {\n                    name: 'mqtt_offline',\n                    description: 'Control MQTT LWT message format',\n                }, {\n                    name: 'button_swap',\n                    description: 'Swap button single and double press functionality',\n                }, {\n                    name: 'stop_flash_rotate',\n                    description: 'Switch between dynamic or fixed slot flash save location',\n                }, {\n                    name: 'button_single',\n                    description: 'Support only single press to speed up button press recognition',\n                }, {\n                    name: 'interlock',\n                    description: '',\n                }, {\n                    name: 'pwm_control',\n                    description: 'Switch between commands PWM or COLOR/DIMMER/CT/CHANNEL',\n                }, {\n                    name: 'ws_clock_reverse',\n                    description: 'Set addressable LED Clock scheme parameter',\n                }, {\n                    name: 'decimal_text',\n                    description: 'Switch between decimal or hexadecimal output',\n                }, {\n                    name: 'light_signal',\n                    description: 'Pair light signal with CO2 sensor',\n                }, {\n                    name: 'hass_discovery',\n                    description: 'Control Home Assistant Automatic discovery',\n                }, {\n                    name: 'not_power_linked',\n                    description: 'Control power in relation fo Dimmer/Color/CT changes',\n                }, {\n                    name: 'no_power_on_check',\n                    description: 'Show voltage even if powered off',\n                }, {\n                    name: 'mqtt_serial',\n                    description: '',\n                }, {\n                    name: 'mqtt_serial_raw',\n                    description: '',\n                }, {\n                    name: 'pressure_conversion',\n                    description: 'Switch between hPa or mmHg pressure unit',\n                }, {\n                    name: 'knx_enabled',\n                    description: '',\n                }, {\n                    name: 'device_index_enable',\n                    description: 'Switch between POWER or POWER1',\n                }, {\n                    name: 'knx_enable_enhancement',\n                    description: '',\n                }, {\n                    name: 'rf_receive_decimal',\n                    description: 'RF Receive data format',\n                }, {\n                    name: 'ir_receive_decimal',\n                    description: 'IR Receive data format',\n                }, {\n                    name: 'hass_light',\n                    description: 'Enforce HASS Autodiscovery as light',\n                }, {\n                    name: 'global_state',\n                    description: 'Control link led blinking',\n                }\n            ]\n        }, {\n            structName: \"SysBitfield2\",\n            setOptionStart: 32,\n            bitSize: 1,\n            items: [],\n        }, {\n            structName: \"SysBitfield3\",\n            setOptionStart: 50,\n            bitSize: 1,\n            items: [\n                {\n                    name: 'timers_enable',\n                    description: '',\n                }, {\n                    name: 'user_esp8285_enable',\n                    description: 'Enable ESP8285 User GPIOs',\n                }, {\n                    name: 'time_append_timezone',\n                    description: 'Append timezone to JSON time',\n                }, {\n                    name: 'gui_hostname_ip',\n                    description: 'Show hostname and IP address in GUI main menu',\n                }, {\n                    name: 'tuya_apply_o20',\n                    description: 'Apple SetOption20 settings to Tuya device',\n                }, {\n                    name: 'mdns_enabled',\n                    description: 'Control mDNS Service',\n                }, {\n                    name: 'use_wifi_scan',\n                    description: 'Scan wifi network at restart for configured APs',\n                }, {\n                    name: 'use_wifi_rescan',\n                    description: 'Scan wifi network every 44 minutes for configured APs',\n                }, {\n                    name: 'receive_raw',\n                    description: 'Add IR Raw data to JSON message',\n                }, {\n                    name: 'hass_tele_on_power',\n                    description: 'Send tele/%topic%/STATE in addition to stat/%topic%/RESULT',\n                }, {\n                    name: 'sleep_normal',\n                    description: 'Enable normal sleep instead of dynamic sleep',\n                }, {\n                    name: 'button_switch_force_local',\n                    description: 'Force local operation when button/switch topic is set',\n                }, {\n                    name: 'no_hold_retain',\n                    description: 'Don\\'t use retain flag on HOLD messages',\n                }, {\n                    name: 'no_power_feedback',\n                    description: 'Don\\'t scan relay power state at restart',\n                }, {\n                    name: 'use_underscore',\n                    description: 'Enable \"_\" instead of \"=\" as sensor index separator',\n                }, {\n                    name: 'fast_power_cycle_disable',\n                    description: 'Disable fast power cycle detection for device reset',\n                }, {\n                    name: 'tuya_serial_mqtt_publish',\n                    description: 'Enable TuyaReceived messages over Mqtt',\n                }, {\n                    name: 'buzzer_enable',\n                    description: 'Enable buzzer when available',\n                }, {\n                    name: 'pwm_multi_channels',\n                    description: 'Enable multi-channels PWM instead of Color PWM',\n                }, {\n                    name: 'ex_tuya_dimmer_min_limit',\n                    description: '',\n                }, {\n                    name: 'energy_weekend',\n                    description: '',\n                }, {\n                    name: 'dds2382_model',\n                    description: 'Select different Modbus registers for Active Energy',\n                }, {\n                    name: 'hardware_energy_total',\n                    description: 'Enable / Disable hardware energy total counter as reference',\n                }, {\n                    name: 'cors_enabled',\n                    description: 'Enable HTTP CORS',\n                }, {\n                    name: 'ds18x20_internal_pullup',\n                    description: 'Enable internal pullip for single DS18x20 sensor',\n                }, {\n                    name: 'grouptopic_mode',\n                    description: 'GroupTopic replaces %topic% (0) or fixed topic cmnd/grouptopic(1)',\n                }, {\n                    name: 'bootcount_update',\n                    description: 'Enable incrementing bootcount when deepsleep is enabled',\n                }, {\n                    name: 'slider_dimmer_stay_on',\n                    description: 'Do not power off if slider moved to far left',\n                }, {\n                    name: 'spare28',\n                    description: '',\n                }, {\n                    name: 'spare29',\n                    description: '',\n                }, {\n                    name: 'shutter_mode',\n                    description: 'Enable shutter support',\n                }, {\n                    name: 'pcf8574_ports_inverted',\n                    description: 'Invert all ports on PCF8574 devices',\n                }\n            ]\n        }, {\n            structName: \"SysBitfield4\",\n            setOptionStart: 82,\n            bitSize: 1,\n            items: [\n                {\n                    name: 'spare00',\n                    description: '',\n                }, {\n                    name: 'spare01',\n                    description: '',\n                }, {\n                    name: 'spare02',\n                    description: '',\n                }, {\n                    name: 'spare03',\n                    description: '',\n                }, {\n                    name: 'spare04',\n                    description: '',\n                }, {\n                    name: 'spare05',\n                    description: '',\n                }, {\n                    name: 'spare06',\n                    description: '',\n                }, {\n                    name: 'spare07',\n                    description: '',\n                }, {\n                    name: 'spare08',\n                    description: '',\n                }, {\n                    name: 'spare09',\n                    description: '',\n                }, {\n                    name: 'spare10',\n                    description: '',\n                }, {\n                    name: 'spare11',\n                    description: '',\n                }, {\n                    name: 'spare12',\n                    description: '',\n                }, {\n                    name: 'spare13',\n                    description: '',\n                }, {\n                    name: 'spare14',\n                    description: '',\n                }, {\n                    name: 'spare15',\n                    description: '',\n                }, {\n                    name: 'spare16',\n                    description: '',\n                }, {\n                    name: 'spare17',\n                    description: '',\n                }, {\n                    name: 'spare18',\n                    description: '',\n                }, {\n                    name: 'spare19',\n                    description: '',\n                }, {\n                    name: 'spare20',\n                    description: '',\n                }, {\n                    name: 'spare21',\n                    description: '',\n                }, {\n                    name: 'spare22',\n                    description: '',\n                }, {\n                    name: 'spare23',\n                    description: '',\n                }, {\n                    name: 'spare24',\n                    description: '',\n                }, {\n                    name: 'spare25',\n                    description: '',\n                }, {\n                    name: 'spare26',\n                    description: '',\n                }, {\n                    name: 'spare27',\n                    description: '',\n                }, {\n                    name: 'spare28',\n                    description: '',\n                }, {\n                    name: 'spare29',\n                    description: '',\n                }, {\n                    name: 'spare30',\n                    description: '',\n                }, {\n                    name: 'spare31',\n                    description: '',\n                }\n            ]\n        }]\n\n\n    for(let commandType in TasmotaConfig_06070000.commands) {\n        TasmotaConfig_07010200.commands[commandType] = {}\n        for(let command in TasmotaConfig_06070000.commands[commandType]) {\n            TasmotaConfig_07010200.commands[commandType][command] = TasmotaConfig_06070000.commands[commandType][command]\n        }\n    }\n\n    TasmotaConfig_07010200.commands.SetOptions.SetOption77 = {\n        \"indexed\": false,\n        \"indexRange\": \"\",  \n        \"options\": [\n            {\n                \"display\": \"0\",\n                \"description\": \"disabled (default) \",\n                \"type\": \"select\"\n            },\n            {\n                \"display\": \"1\",\n                \"description\": \"enabled \",\n                \"type\": \"select\"\n            }\n        ],\n        \"description\": \"Do not power off if a slider is moved to far left\"\n    }\n\n\n    TasmotaConfig_07010200.commands.WiFi.CORS = {\n        \"indexed\": false,\n        \"indexRange\": \"\",  \n        \"options\": [\n            {\n                \"display\": \"\",\n                \"description\": \"disabled (default) \",\n                \"type\": \"select\"\n            },\n            {\n                \"display\": \"*\",\n                \"description\": \"enable CORS for all hosts\",\n                \"type\": \"select\"\n            },\n            {\n                \"display\": \"value\",\n                \"description\": \"Set CORS to specific host like http://tasui.shantur.com\",\n                \"type\": \"input\"\n            }\n        ],\n        \"description\": \"Enable/Disable Cross Origin Resource Sharing for a domain\"\n    }\n\n\n\n    return TasmotaConfig_07010200\n}\n\nexport let TasmotaConfig_07010200 = updatedConfig()","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport TasmotaConfig_06070000 from './TasmotaConfig-6.7.0.0'\nimport { TasmotaConfig_07010200 } from './TasmotaConfig-7.1.2.0'\n\nconst TasmotaVersionedConfig = {\n    TasmotaConfig_06070000: TasmotaConfig_06070000,\n    TasmotaConfig_07010200: TasmotaConfig_07010200,\n}\n\nfunction getConfigurationForVersion(version) {\n    if (version <= 0x06070000) {\n        return TasmotaVersionedConfig.TasmotaConfig_06070000\n    } else {\n\n        let versions = Object.keys(TasmotaVersionedConfig)\n        let closestVersion = 0xFFFFFFFF\n        let maximumVersion = -1\n\n        for (let i = 0; i < versions.length; i++) {\n            let availableVersion = parseInt(versions[i].replace('TasmotaConfig_', ''), 16)\n\n            if (availableVersion > maximumVersion) {\n                maximumVersion = availableVersion\n            }\n\n            if (availableVersion === version) {\n                closestVersion = availableVersion;\n                break\n            } else if (availableVersion > version) {\n                if (closestVersion > availableVersion) {\n                    closestVersion = availableVersion;\n                }\n            }\n        }\n\n        if (closestVersion === 0xFFFFFFFF) {\n            closestVersion = maximumVersion\n        }\n\n\n        return TasmotaVersionedConfig['TasmotaConfig_' + ('0000000' + closestVersion.toString(16).toUpperCase()).substr(-8)]\n    }\n}\n\nexport default getConfigurationForVersion","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport TasmotaDeviceConnector from '../DeviceTypes/TasmotaDeviceConnector';\nimport getConfigurationForVersion from '../Configuration/TasmotaVersionedConfig'\n\nclass DeviceManager {\n\n    deviceConnectors = {};\n\n\n    constructor() {\n        this.devices = \"devices\" in localStorage ? JSON.parse(localStorage.getItem('devices')) : {};\n        this.discoveredDevices = {};\n        Object.keys(this.devices).forEach((key) => {\n            if (!this.devices[key].status0Response) {\n                let oldInfo = Object.assign({}, this.devices[key])\n                this.devices[key] = { status0Response: oldInfo }\n            }\n        })\n\n        this.saveDevices()\n    }\n\n    getTasmotaConfig(macAddress) {\n        let deviceInfo = this.getDevice(macAddress)\n\n        let versionStr = deviceInfo.status0Response.StatusFWR.Version\n        versionStr = versionStr.substring(0, versionStr.indexOf('('))\n\n        let versionNumbers = versionStr.split('.')\n\n        let version = (parseInt(versionNumbers[0]) << 24) + (parseInt(versionNumbers[1]) << 16) + (parseInt(versionNumbers[2]) << 8) + (parseInt(versionNumbers[3]))\n\n        return getConfigurationForVersion(version)\n    }\n\n    addDevice(macAddress, deviceInfo) {\n        if (macAddress.length > 0) {\n            this.devices[macAddress] = deviceInfo\n            // if (this.discoveredDevices[macAddress]) {\n            //     delete this.discoveredDevices[macAddress]\n            // }\n            this.saveDevices()\n            return true;\n        }\n        return false;\n    }\n\n    saveDevices() {\n        localStorage.setItem('devices', JSON.stringify(this.devices));\n    }\n\n    addDiscoveredDevice(macAddress, status0Response) {\n        if (macAddress.length > 0) {\n            if (this.discoveredDevices[macAddress]) {\n                this.discoveredDevices[macAddress].status0Response = status0Response\n            } else {\n                this.discoveredDevices[macAddress] = {\n                    status0Response: status0Response,\n                }\n            }\n            if (this.devices[macAddress]) {\n                this.devices[macAddress].status0Response = status0Response\n                this.updateDeviceConnector(macAddress, status0Response.StatusNET.IPAddress)\n            }\n            return true\n        }\n        return false\n    }\n\n    clearDiscoveredDevices() {\n        for (let deviceMac in Object.keys(this.discoveredDevices)) {\n            if (this.deviceConnectors[deviceMac]) {\n                this.deviceConnectors[deviceMac].disconnect();\n                delete this.deviceConnectors[deviceMac]\n            }\n        }\n        this.discoveredDevices = {};\n    }\n\n    updateDeviceConnector(macAddress, ipAddress) {\n        if (this.deviceConnectors[macAddress]) {\n            this.deviceConnectors[macAddress].updateIpAddress(ipAddress)\n        }\n    }\n\n    updateDevice(macAddress, updatedInfo) {\n        if (this.devices[macAddress]) {\n            this.devices[macAddress] = { ...this.devices[macAddress], ...updatedInfo }\n            this.saveDevices()\n            this.updateDeviceConnector(macAddress, this.devices[macAddress].status0Response.StatusNET.IPAddress)\n        } else if (this.discoveredDevices[macAddress]) {\n            this.discoveredDevices[macAddress] = { ...this.discoveredDevices[macAddress], ...updatedInfo }\n            this.updateDeviceConnector(macAddress, this.discoveredDevices[macAddress].status0Response.StatusNET.IPAddress)\n        }\n    }\n\n    removeDevice(macAddress) {\n        if (this.devices[macAddress]) {\n            if (this.deviceConnectors[macAddress]) {\n                this.deviceConnectors[macAddress].disconnectAll()\n            }\n            delete this.devices[macAddress]\n            localStorage.setItem('devices', JSON.stringify(this.devices));\n        }\n    }\n\n    getDevice(macAddress) {\n        if (this.devices[macAddress]) {\n            return this.devices[macAddress];\n        } else if (this.discoveredDevices[macAddress]) {\n            return this.discoveredDevices[macAddress]\n        } else {\n            return null\n        }\n    }\n\n    getDevices() {\n        return this.devices;\n    }\n\n    getDiscoveredDevices() {\n        return this.discoveredDevices;\n    }\n\n    isDeviceKnown(macAddress) {\n        return this.devices[macAddress] != null;\n    }\n\n    getDeviceConnector(macAddress, ipAddress) {\n        if (this.deviceConnectors[macAddress]) {\n            return this.deviceConnectors[macAddress];\n        } else {\n            let deviceConnector = new TasmotaDeviceConnector(ipAddress, this.getDevice(macAddress).authInfo);\n            this.deviceConnectors[macAddress] = deviceConnector;\n            return deviceConnector;\n        }\n    }\n}\n\nexport default DeviceManager;","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport { Component } from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport TasmotaDevice from '../DeviceTypes/TasmotaDevice';\nimport { withStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nclass DeviceDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            macAddress: \"\",\n        }\n    }\n\n    componentDidMount() {\n        window.gtag('event', 'DeviceDetails');\n        window.gtag('event', 'screen_view', { 'screen_name': 'DeviceDetails'});\n        this.setState({\n            macAddress: this.props.match.params.mac\n        })\n\n    }\n\n    render() {\n        if (this.state.macAddress !== \"\") {\n            return (\n                <Box style={{ overflow: \"visible\", position: \"absolute\" }}>\n                    <TasmotaDevice macAddress={this.state.macAddress} renderType=\"Details\" deviceManager={this.props.deviceManager} />\n                </Box>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default DeviceDetails","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport { Component } from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport TasmotaDevice from '../DeviceTypes/TasmotaDevice';\n\nclass DeviceDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            macAddress: \"\",\n        }\n    }\n\n    componentDidMount() {\n        window.gtag('event', 'DeviceSettings');\n        window.gtag('event', 'screen_view', { 'screen_name': 'DeviceSettings'});\n        this.setState({\n            macAddress: this.props.match.params.mac\n        })\n\n    }\n\n    render() {\n        if (this.state.macAddress !== \"\") {\n            return (\n                <Box style={{ overflow: \"visible\", position: \"absolute\" }}>\n                    <TasmotaDevice macAddress={this.state.macAddress} renderType=\"Settings\" deviceManager={this.props.deviceManager} />\n                </Box>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default DeviceDetails;","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport { Checkbox, FormControlLabel, Typography } from '@material-ui/core';\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from '@material-ui/icons/Add';\nimport CallToActionIcon from '@material-ui/icons/CallToAction';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InfoIcon from '@material-ui/icons/Info';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\nimport IPAddress from 'ip-address';\nimport { withSnackbar } from 'notistack';\nimport React from 'react';\nimport superagent from \"superagent\";\nimport DeviceList from '../Components/DeviceList';\nimport DisplayTypeButtons from '../Components/DisplayModeButtons';\n\n\n\nclass FindDevices extends React.Component {\n\n    ipsToScan = [];\n    ipsRequested = [];\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ipFrom: this.props.appConfig.getAppConfig('ip_scan_from') || \"192.168.10.1\",\n            ipTo: this.props.appConfig.getAppConfig('ip_scan_to') || \"192.168.10.254\",\n            totalAddresses: \"\",\n            numIpsRequested: 0,\n            numIpsCompleted: 0,\n            searching: false,\n            displayMode: \"Table_Status\",\n            username: '',\n            password: '',\n            enableAuth: false,\n            enableCorsAutomatically: !window.runtimeConfig.proxyMode,\n\n        }\n\n    }\n\n    componentDidMount() {\n        window.gtag('event', 'screen_view', { 'screen_name': 'DiscoverDevices'});\n        window.gtag('event', 'DiscoverDevices');\n    }\n\n    componentWillMount() {\n        this.calculateTotalIPs(this.state.ipFrom, this.state.ipTo);\n    }\n\n    componentWillUnmount() {\n        // this.props.deviceManager.clearDiscoveredDevices();\n    }\n\n    handleIPFromChange = event => {\n        this.setState({\n            ipFrom: event.target.value,\n        });\n        let nets = event.target.value.split('.')\n        let to = this.state.ipTo\n        if (nets.length === 4) {\n            to = `${nets[0]}.${nets[1]}.${nets[2]}.254`\n            this.setState({\n                ipTo: to\n            })\n        }\n        this.calculateTotalIPs(event.target.value, to);\n    }\n\n    handleIPToChange = event => {\n        this.setState({\n            ipTo: event.target.value,\n        });\n        this.calculateTotalIPs(this.state.ipFrom, event.target.value);\n    }\n\n    calculateTotalIPs(ipFrom, ipTo) {\n\n        console.log('Calculate IPs From %s : To %s ', ipFrom, ipTo);\n\n        if (ipFrom.split('.').length === 4 && ipTo.split('.').length === 4) {\n\n            let from = new IPAddress.Address4(ipFrom);\n            let to = new IPAddress.Address4(ipTo);\n\n            // console.log('From %O : To %O ', from.bigInteger().toString() , to.bigInteger().toString());\n\n            this.setState({\n                totalAddresses: (to.bigInteger() - from.bigInteger() + 1),\n            })\n\n            console.log('Total Addresses : ' + (to.bigInteger() - from.bigInteger() + 1));\n        }\n    }\n\n    onCommandResponse(args) {\n        console.log(`${args.ip} : Present : ${args.success} Response : %O`, args.response);\n        if (args.success && args.response.body.StatusNET) {\n            this.props.deviceManager.addDiscoveredDevice(args.response.body.StatusNET.Mac, args.response.body);\n            if (this.state.enableAuth) {\n                this.props.deviceManager.updateDevice(args.response.body.StatusNET.Mac,\n                    {\n                        authInfo:\n                        {\n                            username: this.state.username,\n                            password: this.state.password,\n                        }\n                    })\n            }\n            this.setState({})\n            // }\n        } else {\n            if (args.success && args.response.body.WARNING) {\n                if (this.state.enableAuth) {\n                    this.props.enqueueSnackbar(`${args.ip} authentication failed`, { variant: 'error'})\n                } else {\n                    this.props.enqueueSnackbar(`${args.ip} needs authentication`, { variant: 'error'})\n                }\n            }\n        }\n        this.ipsRequested = this.ipsRequested.filter(item => item !== args.ip);\n        this.scanIps()\n    }\n\n    scanIps() {\n        if (this.ipsToScan.length) {\n\n            while (this.ipsRequested.length < 25 && this.ipsToScan.length) {\n                let ip = this.ipsToScan.shift()\n                this.ipsRequested.push(ip);\n                if (this.state.enableCorsAutomatically && !window.runtimeConfig.proxyMode) {\n                    this.enableCorsAndSendRequest(ip)\n                } else {\n                    this.sendRequest(ip)\n                }\n            }\n\n            this.setState({\n                numIpsCompleted: (this.state.totalAddresses - this.ipsToScan.length) * 100 / this.state.totalAddresses,\n                numIpsRequested: (this.state.totalAddresses - this.ipsToScan.length + this.ipsRequested.length) * 100 / this.state.totalAddresses\n            })\n        } else {\n            if (this.ipsRequested.length === 0) {\n                this.setState({\n                    searching: false,\n                })\n            }\n        }\n    }\n\n    enableCorsAndSendRequest(ip) {\n        let cmnd = `Backlog SetOption73 1; CORS ${window.location.protocol}//${window.location.hostname}`\n\n        if (window.location.port && window.location.port !== \"\") {\n            cmnd += `:${window.location.port}`\n        }\n\n        let url = 'http://' + ip + '/cm?cmnd=' + encodeURIComponent(cmnd).replace(\";\", \"%3B\");\n\n        console.log(\"Enabling CORS for with \" + url)\n\n        superagent.get(url)\n            .timeout({\n                response: 5000,  // Wait 5 seconds for the server to start sending,\n                deadline: 6000, // but allow 6 seconds for the file to finish loading.\n            }).end(function (err, res) {\n                setTimeout(this.obj.sendRequest.bind(this.obj, this.ip), 1000);\n            }.bind({obj: this, ip: ip}));\n    }\n\n    sendRequest(ip) {\n        var callback = function (err, response) {\n            this.onCommandResponse({ key: this.cmnd, response: response, error: err, ip: this.ip, url: this.url, success: err ? false : true });\n        }\n\n        let cmnd = \"Status 0\"\n        // let ip = IPAddress.Address4.fromBigInteger(ipNum).correctForm();\n        let url = 'http://' + ip + '/cm?cmnd=' + encodeURIComponent(cmnd);\n\n        if (this.state.enableAuth) {\n            url += `&user=${encodeURIComponent(this.state.username)}&password=${encodeURIComponent(this.state.password)}`\n        }\n\n        if (window.runtimeConfig.proxyMode) {\n            url = '?url=' + encodeURIComponent(url)\n        }\n\n        superagent.get(url)\n            .timeout({\n                response: 5000,  // Wait 5 seconds for the server to start sending,\n                deadline: 60000, // but allow 1 minute for the file to finish loading.\n            })\n            .end(callback.bind({ onCommandResponse: this.onCommandResponse.bind(this), ip: ip, url: url, cmnd: cmnd, success: true }))\n\n    }\n\n    handleFindClicked() {\n\n        window.gtag('event', 'StartDiscovery');\n\n        let from = new IPAddress.Address4(this.state.ipFrom).bigInteger();\n        let to = new IPAddress.Address4(this.state.ipTo).bigInteger();\n\n        this.props.appConfig.putAppConfig('ip_scan_from', this.state.ipFrom)\n        this.props.appConfig.putAppConfig('ip_scan_to', this.state.ipTo)\n\n        for (let ipNum = from; ipNum <= to; ipNum++) {\n            this.ipsToScan.push(IPAddress.Address4.fromBigInteger(ipNum).correctForm());\n        }\n        this.setState({\n            searching: true,\n        })\n        this.scanIps();\n    }\n\n    handleStopClicked() {\n        window.gtag('event', 'StopDiscovery');\n        this.ipsToScan = [];\n        this.scanIps();\n    }\n\n    openDeviceDetails = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/details/' + macAddress);\n    }\n\n    addDevice = (macAddress, event) => {\n        window.gtag('event', 'AddDevice');\n        console.log('Add Device ' + macAddress)\n        event.stopPropagation();\n        this.props.deviceManager.addDevice(macAddress, this.props.deviceManager.getDiscoveredDevices()[macAddress]);\n        this.setState({})\n    }\n\n    deleteDevice = (macAddress, event) => {\n        window.gtag('event', 'DeleteDevice');\n        console.log('Delete Device ' + macAddress)\n        event.stopPropagation();\n        this.props.deviceManager.removeDevice(macAddress);\n        this.setState({})\n    }\n\n    openDeviceSettings = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/settings/' + macAddress);\n    }\n\n    openDeviceConsole = (macAddress, event) => {\n        event.stopPropagation();\n        this.props.history.push('/console/' + macAddress);\n    }\n\n    openWebUI  = (macAddress, event) => {\n        window.gtag('event', 'OpenWebUI');\n        event.stopPropagation();\n        let ip = this.props.deviceManager.getDevice(macAddress).status0Response.StatusNET.IPAddress\n        window.open(`http://${ip}`)\n    }\n\n    commonButtons = [{\n        toolTip: \"Details\",\n        label: \"details\",\n        icon: <InfoIcon />,\n        onButtonClick: (mac, event) => this.openDeviceDetails(mac, event),\n    }, {\n        toolTip: \"Settings\",\n        label: \"settings\",\n        icon: <SettingsApplicationsIcon />,\n        onButtonClick: (mac, event) => this.openDeviceSettings(mac, event),\n    }, {\n        toolTip: \"Console\",\n        label: \"console\",\n        icon: <CallToActionIcon />,\n        onButtonClick: (mac, event) => this.openDeviceConsole(mac, event),\n    }, {\n        toolTip: \"WebUI\",\n        label: \"webui\",\n        icon: <OpenInBrowserIcon />,\n        onButtonClick: (mac, event) => this.openWebUI(mac, event),\n    }]\n\n    knownDeviceButtons = [...this.commonButtons, {\n        toolTip: \"Delete\",\n        label: \"delete\",\n        icon: <DeleteIcon />,\n        onButtonClick: (mac, event) => this.deleteDevice(mac, event),\n    }]\n\n    newDeviceButtons = [...this.commonButtons, {\n        toolTip: \"Add\",\n        label: \"add\",\n        icon: <AddIcon />,\n        onButtonClick: (mac, event) => this.addDevice(mac, event),\n    }]\n\n    onAuthEnableChanged(event) {\n        event.stopPropagation()\n        this.setState({ enableAuth: event.target.checked })\n    }\n\n    onEnableCorsAutomaticallyChanged(event) {\n        event.stopPropagation()\n        this.setState({ enableCorsAutomatically: event.target.checked })\n    }\n\n    render() {\n\n        let discoveredDevices = this.props.deviceManager.getDiscoveredDevices()\n        let discoveredDevicesMacs = Object.keys(discoveredDevices)\n\n        let newDevices = discoveredDevicesMacs.filter((mac) => {\n            return !this.props.deviceManager.isDeviceKnown(mac)\n        }).reduce((obj, key) => {\n            obj[key] = discoveredDevices[key];\n            return obj;\n        }, {});\n\n\n        let knownDevices = discoveredDevicesMacs.filter((mac) => {\n            return this.props.deviceManager.isDeviceKnown(mac)\n        }).reduce((obj, key) => {\n            obj[key] = discoveredDevices[key];\n            return obj;\n        }, {});\n\n\n        return (\n            <Box display=\"flex\" flexGrow={1} flexDirection=\"column\" style={{ overflow: \"visible\", position: \"absolute\" }}>\n                <Box display=\"flex\" alignItems=\"center\" flexDirection=\"row\">\n                    <h1>Discover Active Devices</h1>\n                    <DisplayTypeButtons displayMode={this.state.displayMode} setState={(state) => this.setState(state)} />\n                </Box>\n                <Box display=\"flex\" alignItems=\"baseline\" flexDirection=\"row\">\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Start IP Address\"\n                        placeholder=\"IP\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.ipFrom}\n                        disabled={this.state.searching ? 1 : 0}\n                        onChange={this.handleIPFromChange}\n                    />\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"End IP Address\"\n                        placeholder=\"IP\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.ipTo}\n                        disabled={this.state.searching ? 1 : 0}\n                        onChange={this.handleIPToChange}\n                    />\n                    {!this.state.searching ?\n                        <Button variant=\"contained\" margin=\"normal\" onClick={() => this.handleFindClicked()}>Start Discovery</Button>\n                        : <Button variant=\"contained\" margin=\"normal\" onClick={() => this.handleStopClicked()} >Stop Discovery</Button>\n                    }\n                </Box>\n                <Typography>\n                    IPs to scan : {this.state.totalAddresses}\n                </Typography>\n                { window.runtimeConfig.proxyMode ? \"\" : \n                    <Box display=\"flex\" alignItems=\"baseline\" flexDirection=\"row\">\n                        <FormControlLabel\n                            value=\"end\"\n                            control={<Checkbox\n                                disabled={this.state.searching ? 1 : 0}\n                                color=\"primary\"\n                                checked={this.state.enableCorsAutomatically}\n                                onChange={(event) => this.onEnableCorsAutomaticallyChanged(event)}\n                            />}\n                            label=\"Enable CORS for TasUI\"\n                            labelPlacement=\"end\"\n                        />\n                    </Box>\n                }\n                <Box display=\"flex\" alignItems=\"baseline\" flexDirection=\"row\">\n                    <FormControlLabel\n                        value=\"end\"\n                        control={<Checkbox\n                            disabled={this.state.searching ? 1 : 0}\n                            color=\"primary\"\n                            checked={this.state.enableAuth}\n                            onChange={(event) => this.onAuthEnableChanged(event)}\n                        />}\n                        label=\"Use Authentication\"\n                        labelPlacement=\"end\"\n                    />\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        disabled={this.state.enableAuth && !this.state.searching ? 0 : 1}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.username}\n                        onChange={(event) => this.setState({ username: event.target.value })}\n                    />\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        disabled={this.state.enableAuth && !this.state.searching ? 0 : 1}\n                        value={this.state.password}\n                        onChange={(event) => this.setState({ password: event.target.value })}\n                    />\n                </Box>\n                {this.state.searching ?\n                    <LinearProgress variant=\"buffer\" value={this.state.numIpsCompleted} valueBuffer={this.state.numIpsRequested} />\n                    : null}\n\n\n                {/* <h3>New Devices</h3> */}\n                <DeviceList\n                    key=\"newDevices\"\n                    displayMode={this.state.displayMode}\n                    deviceSections={{\n                        \"New Devices\": { devices: newDevices, itemButtons: this.newDeviceButtons },\n                        \"Saved Devices\": { devices: knownDevices, itemButtons: this.knownDeviceButtons }\n                    }}\n                    deviceManager={this.props.deviceManager}\n                />\n\n            </Box>\n        )\n\n    }\n\n}\n\n\n\nexport default withSnackbar(FindDevices)\n","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react'\nimport { withStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Terminal from 'react-console-emulator'\nimport { Box, Container, FormControlLabel, Checkbox } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport superagent from 'superagent';\nimport ActionButton from '../Components/ActionButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst styles = theme => ({\n    terminal: {\n        flexGrow: 1,\n        flexBasis: \"0\",\n        flexShrink: 1,\n        height: \"80vh\",\n        overflow: \"hidden\",\n    },\n})\n\nclass Console extends React.Component {\n\n    commands = {}\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            deviceName: '',\n            webLogEnabled: false,\n            weblogLevel: 2,\n        }\n        this.terminal = React.createRef()\n        this.deviceManager = this.props.deviceManager\n        this.commandFired = null\n    }\n\n    onCommandResponse(cmnd, success, response) {\n        console.log(`onCommandResponse ${cmnd} === ${this.commandFired}`)\n        if (cmnd === this.commandFired) {\n            this.commandFired = null\n            if (success) {\n                this.addLog(JSON.stringify(response))\n            } else {\n                this.addLog(`${cmnd} Failed`)\n            }\n        }\n\n        if (cmnd.toLowerCase().startsWith('weblog ') && success) {\n            if (response.WebLog) {\n                this.setState({ weblogLevel: response.WebLog })\n            } else {\n                this.setState({ weblogLevel: 1 })\n            }\n        }\n    }\n\n    sendConsoleCommand(cmnd) {\n        this.terminal.current.terminalInput.current.value = cmnd\n        this.terminal.current.processCommand()\n    }\n\n    addLog(line) {\n        let rootNode = this.terminal.current.terminalRoot.current;\n        let scrolledUp = rootNode.scrollTop < rootNode.scrollHeight - rootNode.clientHeight\n\n        this.terminal.current.pushToStdout(line)\n        if (!scrolledUp) {\n            this.terminal.current.scrollToBottom()\n        }\n    }\n\n    onWebLogLevelChanged(event) {\n        event.stopPropagation()\n        this.fireCommand('WebLog ' + event.target.value)\n    }\n\n    onWegLogEnableChanged(event) {\n        this.setState({ webLogEnabled: event.target.checked })\n        if (event.target.checked) {\n            this.startWebLog()\n        } else {\n            this.stopWebLog()\n        }\n    }\n\n    requestLog() {\n        var callback = function (err, response) {\n            // console.log (\"Error : %O Response : %O\", err, response);\n            if (response) {\n                this.nextCommanNumber = response.text.substring(0, response.text.indexOf('}'));\n                let index = response.text.indexOf(':');\n                if (index > 0) {\n                    let data = response.text.substring(index + 1)\n                    data = data.substring(0, data.lastIndexOf('}1'))\n                    let lines = data.split('\\n')\n                    for (let line of lines) {\n                        this.addLog(line)\n                    }\n                }\n            }\n        }\n        let url = 'http://' + this.deviceIPAddress + '/cs?c2=' + this.nextCommanNumber;\n\n        if (this.deviceInfo.authInfo) {\n            url += `&user=${encodeURI(this.deviceInfo.authInfo.username)}&password=${encodeURI(this.deviceInfo.authInfo.password)}`\n        }\n\n        superagent.get(url)\n            .timeout({\n                response: 1000,  // Wait 5 seconds for the server to start sending,\n                deadline: 3000, // but allow 1 minute for the file to finish loading.\n            })\n            .end(callback.bind(this))\n    }\n\n    fireCommand(command, args) {\n        this.commandFired = `${command} ${args}`\n        console.log(`FireCommand ${this.commandFired}`)\n        this.deviceConnector.performCommandOnDeviceDirect(this.commandFired)\n    }\n\n    generateCommands() {\n        for (let [commandCatagory, commands] of Object.entries(this.deviceConfig.commands)) {\n            for (let [commandName, command] of Object.entries(commands)) {\n                this.commands[commandName.toLowerCase()] = {\n                    description: ' ', //command.description,\n                    usage: `${commandName} ${command.options.length > 0 ? ` <value>` : ''}`,\n                    fn: (args) => this.fireCommand(commandName, args ? args : '')\n                }\n            }\n        }\n    }\n\n    componentWillMount() {\n        this.macAddress = this.props.match.params.mac\n        this.deviceInfo = this.deviceManager.getDevice(this.macAddress)\n        this.deviceIPAddress = this.deviceInfo.status0Response.StatusNET.IPAddress\n        this.deviceConfig = this.props.deviceManager.getTasmotaConfig(this.macAddress)\n        this.generateCommands()\n        if (!this.deviceConnector) {\n            this.deviceConnector = this.props.deviceManager.getDeviceConnector(this.macAddress, this.deviceInfo.status0Response.StatusNET.IPAddress);\n        }\n        this.deviceConnector.connect(this);\n        this.setState({ deviceName: this.deviceInfo.status0Response.Status.FriendlyName[0] })\n        this.nextCommanNumber = 0\n        if (this.state.webLogEnabled) {\n            this.startWebLog()\n        }\n    }\n\n    componentDidMount() {\n        window.gtag('event', 'Console');\n        window.gtag('event', 'screen_view', { 'screen_name': 'Console'});\n        this.fireCommand('Weblog')\n    }\n\n    startWebLog() {\n        this.stopWebLog()\n        this.timer = setInterval(this.requestLog.bind(this), 3000);\n        this.requestLog()\n    }\n\n    stopWebLog() {\n        if (this.timer) {\n            clearInterval(this.timer);\n            this.timer = null\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopWebLog()\n        this.deviceConnector.disconnect(this);\n    }\n\n    toCamelCase(string) {\n        return string.replace(/^([A-Z])|\\s(\\w)/g, function (match, p1, p2, offset) {\n            if (p2) return p2.toUpperCase();\n            return p1.toLowerCase();\n        });\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <Box>\n                <Box flexGrow={1}>\n                    <FormControlLabel\n                        value=\"end\"\n                        control={<Checkbox\n                            color=\"primary\"\n                            checked={this.state.weblogEnabled}\n                            onChange={(event) => this.onWegLogEnableChanged(event)}\n                        />}\n                        label=\"Fetch Weblog\"\n                        labelPlacement=\"end\"\n                    />\n\n                    <ActionButton\n                        toolTip=\"Clear Console\"\n                        label=\"clear\"\n                        icon={<ClearIcon />}\n                        onButtonClick={() => this.terminal.current.clearStdout()}\n                    />\n\n                    <ActionButton\n                        toolTip=\"Show help\"\n                        label=\"help\"\n                        icon={<HelpIcon />}\n                        onButtonClick={() => this.sendConsoleCommand('help')}\n                    />\n\n                    <FormControl>\n                        <InputLabel id=\"weblog-select-label\">\n                            Weblog Level\n                        </InputLabel>\n                        <Select\n                            labelId=\"weblog-select-label\"\n                            id=\"weblog-select\"\n                            value={this.state.weblogLevel}\n                            onChange={(event) => this.onWebLogLevelChanged(event)}\n                        // labelWidth={labelWidth}\n                        >\n                            <MenuItem value={1}>Error Messages</MenuItem>\n                            <MenuItem value={2}>Error and Info</MenuItem>\n                            <MenuItem value={3}>Error, Info and Debug</MenuItem>\n                            <MenuItem value={4}>Error, Info and More Debug</MenuItem>\n                        </Select>\n                    </FormControl>\n\n                </Box>\n                <Terminal\n                    className={classes.terminal}\n                    ref={this.terminal}\n                    commands={this.commands}\n                    welcomeMessage={'Console to ' + this.state.deviceName + '. Type help to see all commands. All commands are lowercase only'}\n                    promptLabel={`${this.toCamelCase(this.state.deviceName)}>`}\n                />\n            </Box>\n        )\n\n    }\n}\n\nexport default withStyles(styles)(Console)","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\nclass AppConfig {\n\n\n    constructor() {\n        this.appConfig = \"appConfig\" in localStorage ? JSON.parse(localStorage.getItem('appConfig')) : {};\n        this.appSessionConfig = \"appSessionConfig\" in sessionStorage ? JSON.parse(localStorage.getItem('appConfigSession')) : {};\n    }\n\n    saveSessionConfig() {\n        sessionStorage.setItem('appSessionConfig', JSON.stringify(this.appSessionConfig));\n    }\n\n    saveAppConfig() {\n        localStorage.setItem('appConfig', JSON.stringify(this.appConfig));\n    }\n\n    putSessionConfig(key, value) {\n        this.appSessionConfig[key] = value\n        this.saveSessionConfig()\n    }\n\n    putAppConfig(key, value) {\n        this.appConfig[key] = value\n        this.saveAppConfig()\n    }\n\n    getSessionConfig(key) {\n        return this.appSessionConfig[key]\n    }\n\n    getAppConfig(key) {\n        return this.appConfig[key]\n    }\n}\n\nexport default AppConfig","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Version from './version.json'\n\nimport { Route, Link, Switch, HashRouter as Router, Redirect } from 'react-router-dom';\n\nimport Devices from './Screens/Devices';\nimport DeviceManager from './DeviceManagement/DeviceManager';\nimport DeviceDetails from './Screens/DeviceDetails';\nimport DeviceSettings from './Screens/DeviceSettings';\nimport FindDevices from './Screens/FindDevices';\nimport Console from './Screens/Console'\nimport AppConfig from './Configuration/AppConfig'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexBasis: \"100%\",\n    flexGrow: 0,\n    flexShrink: 1,\n    height: \"100vh\",\n    overflow: \"hidden\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  title: {\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(0.5),\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    paddingLeft: theme.spacing(3),\n    display: 'flex',\n    // flexGrow: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  content: {\n    flexBasis: \"100%\",\n    flexGrow: 1,\n    flexShrink: 1,\n    height: \"100vh\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    overflow: \"hidden\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n});\n\nconst deviceGroups = [\n  {\n  //   name: 'All',\n  //   link: '/devices/all',\n  //   icon: <BorderAllIcon/>,\n  // }, {\n  //   name: 'Favourites',\n  //   link: '/devices/favs',\n  //   icon: <FavoriteIcon/>,\n  }  \n]\n\nconst mainMenuItems = [\n  {\n    name: 'Devices',\n    link: '/devices',\n    icon: <DeveloperBoardIcon/>,\n    // children: deviceGroups,\n  }, {\n    name: 'Discover Devices',\n    link: '/findDevices',\n    icon: <SearchIcon/>,\n  // }, {\n  //   name: 'About',\n  //   link: '/about',\n  //   icon: <InfoIcon/>,\n  }\n]\n\nconst deviceManager = new DeviceManager();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.appConfig = new AppConfig()\n  }\n\n  renderChildItems(item) {\n    const { classes } = this.props;\n\n    if (item.children && item.children.length > 0) {\n      return item.children.map((child, index) => {\n        return(\n          <Link to={child.link}>\n            <ListItem button key={child.name} className={classes.nested}>\n              <ListItemIcon>{child.icon}</ListItemIcon>\n              <ListItemText primary={child.name} />\n            </ListItem>  \n          </Link>\n        )\n      })\n    } \n  }\n\n\n  render() {\n\n    console.log(\"RuntimeConfig %O\", window.runtimeConfig)\n\n    const { classes } = this.props;\n\n    const listItems = mainMenuItems.map((item, index) => {\n      return (\n        <div>\n        <Link to={item.link} key={item.link} >\n          <ListItem button key={item.name}>\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.name} />\n          </ListItem>\n        </Link>\n\n        {this.renderChildItems(item)}\n        <Divider />\n        </div>\n      )\n    });\n\n\n    return (\n      <div className={classes.root}>\n        <Router>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap>\n              TasUI\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.toolbar} >\n            <Typography variant=\"h6\" noWrap className={classes.title}>\n                TasUI\n            </Typography>\n            <Link variant=\"subtitle2\" noWrap onClick={() => window.open(`https://github.com/IOTReboot/TasUI/tree/${process.env.REACT_APP_GIT_SHA}`)}>\n              {Version.versionNumber}-{Version.versionName} {process.env.REACT_APP_GIT_BRANCH} ({process.env.REACT_APP_GIT_SHA})\n            </Link>\n          </div>\n          <Divider />\n          <List>\n            {listItems}\n          </List>\n        </Drawer>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n              <div>\n            <Switch className={classes.content}>\n              <Route exact path=\"/findDevices\" render={(props) => <FindDevices {...props} deviceManager={deviceManager} appConfig={this.appConfig} />} />\n              <Route exact path=\"/devices\" render={(props) => <Devices {...props} deviceManager={deviceManager} appConfig={this.appConfig} />} />\n              <Route path=\"/details/:mac\" render={(props) => <DeviceDetails {...props} deviceManager={deviceManager} appConfig={this.appConfig} />} />\n              <Route path=\"/settings/:mac\" render={(props) => <DeviceSettings {...props} deviceManager={deviceManager} appConfig={this.appConfig} />} />\n              <Route path=\"/console/:mac\" render={(props) => <Console {...props} deviceManager={deviceManager} appConfig={this.appConfig} />} />\n              <Redirect to=\"/devices\" />\n            </Switch>\n            </div>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App)","/*\n\n  Copyright (C) 2019  Shantur Rathore\n  \n  This program is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { SnackbarProvider } from 'notistack';\n\n\nReactDOM.render(\n\n  <SnackbarProvider maxSnack={5}>\n    <App />\n  </SnackbarProvider>,\n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}